shadow$provide[81]=function(r,l,A,p){var k=l(0);r=l(80);class m extends r.Resource{constructor(d,c){const {width:a,height:b}=c||{};if(!a||!b)throw Error("BufferResource width or height invalid");super(a,b);this.data=d;this.unpackAlignment=c.unpackAlignment??4}upload(d,c,a){d=d.gl;d.pixelStorei(d.UNPACK_ALIGNMENT,this.unpackAlignment);d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,c.alphaMode===k.ALPHA_MODES.UNPACK);const b=c.realWidth,e=c.realHeight;return a.width===b&&a.height===e?d.texSubImage2D(c.target,
0,0,0,b,e,c.format,a.type,this.data):(a.width=b,a.height=e,d.texImage2D(c.target,0,a.internalFormat,b,e,0,c.format,a.type,this.data)),!0}dispose(){this.data=null}static test(d){return null===d||d instanceof Int8Array||d instanceof Uint8Array||d instanceof Uint8ClampedArray||d instanceof Int16Array||d instanceof Uint16Array||d instanceof Int32Array||d instanceof Uint32Array||d instanceof Float32Array}}p.BufferResource=m}
goog.provide("module$node_modules$$pixi$core$lib$textures$resources$BufferResource");
goog.global. module$node_modules$$pixi$core$lib$textures$resources$BufferResource=shadow.js.require(81, {});
