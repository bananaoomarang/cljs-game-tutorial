shadow$provide[101]=function(r,l,A,p){var k=l(96),m=l(100);r=class{constructor(){this.worldTransform=new k.Matrix;this.localTransform=new k.Matrix;this.position=new m.ObservablePoint(this.onChange,this,0,0);this.scale=new m.ObservablePoint(this.onChange,this,1,1);this.pivot=new m.ObservablePoint(this.onChange,this,0,0);this.skew=new m.ObservablePoint(this.updateSkew,this,0,0);this._rotation=0;this._cx=1;this._cy=this._sx=0;this._sy=1;this._parentID=this._worldID=this._currentLocalID=this._localID=
0}onChange(){this._localID++}updateSkew(){this._cx=Math.cos(this._rotation+this.skew.y);this._sx=Math.sin(this._rotation+this.skew.y);this._cy=-Math.sin(this._rotation-this.skew.x);this._sy=Math.cos(this._rotation-this.skew.x);this._localID++}updateLocalTransform(){const d=this.localTransform;this._localID!==this._currentLocalID&&(d.a=this._cx*this.scale.x,d.b=this._sx*this.scale.x,d.c=this._cy*this.scale.y,d.d=this._sy*this.scale.y,d.tx=this.position.x-(this.pivot.x*d.a+this.pivot.y*d.c),d.ty=this.position.y-
(this.pivot.x*d.b+this.pivot.y*d.d),this._currentLocalID=this._localID,this._parentID=-1)}updateTransform(d){const c=this.localTransform;if(this._localID!==this._currentLocalID&&(c.a=this._cx*this.scale.x,c.b=this._sx*this.scale.x,c.c=this._cy*this.scale.y,c.d=this._sy*this.scale.y,c.tx=this.position.x-(this.pivot.x*c.a+this.pivot.y*c.c),c.ty=this.position.y-(this.pivot.x*c.b+this.pivot.y*c.d),this._currentLocalID=this._localID,this._parentID=-1),this._parentID!==d._worldID){const a=d.worldTransform,
b=this.worldTransform;b.a=c.a*a.a+c.b*a.c;b.b=c.a*a.b+c.b*a.d;b.c=c.c*a.a+c.d*a.c;b.d=c.c*a.b+c.d*a.d;b.tx=c.tx*a.a+c.ty*a.c+a.tx;b.ty=c.tx*a.b+c.ty*a.d+a.ty;this._parentID=d._worldID;this._worldID++}}setFromMatrix(d){d.decompose(this);this._localID++}get rotation(){return this._rotation}set rotation(d){this._rotation!==d&&(this._rotation=d,this.updateSkew())}};r.IDENTITY=new r;r.prototype.toString=function(){return`[@pixi/math:Transform position=(${this.position.x}, ${this.position.y}) rotation=${this.rotation} scale=(${this.scale.x}, ${this.scale.y}) skew=(${this.skew.x}, ${this.skew.y}) ]`};
p.Transform=r}
goog.provide("module$node_modules$$pixi$math$lib$Transform");
goog.global. module$node_modules$$pixi$math$lib$Transform=shadow.js.require(101, {});
