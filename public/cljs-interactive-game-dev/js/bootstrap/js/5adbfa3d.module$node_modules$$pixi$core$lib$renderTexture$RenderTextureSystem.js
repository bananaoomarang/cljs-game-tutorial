shadow$provide[161]=function(r,l,A,p){var k=l(52);r=l(73);var m=l(102);const d=new m.Rectangle,c=new m.Rectangle;class a{constructor(b){this.renderer=b;this.defaultMaskStack=[];this.current=null;this.sourceFrame=new m.Rectangle;this.destinationFrame=new m.Rectangle;this.viewportFrame=new m.Rectangle}contextChange(){const b=this.renderer?.gl.getContextAttributes();this._rendererPremultipliedAlpha=!!(b&&b.alpha&&b.premultipliedAlpha)}bind(b=null,e,g){const f=this.renderer;this.current=b;let h,n,q;b?
(h=b.baseTexture,q=h.resolution,e||(d.width=b.frame.width,d.height=b.frame.height,e=d),g||(c.x=b.frame.x,c.y=b.frame.y,c.width=e.width,c.height=e.height,g=c),n=h.framebuffer):(q=f.resolution,e||(d.width=f._view.screen.width,d.height=f._view.screen.height,e=d),g||(g=d,g.width=e.width,g.height=e.height));const t=this.viewportFrame;t.x=g.x*q;t.y=g.y*q;t.width=g.width*q;t.height=g.height*q;b||(t.y=f.view.height-(t.y+t.height));t.ceil();this.renderer.framebuffer.bind(n,t);this.renderer.projection.update(g,
e,q,!n);b?this.renderer.mask.setMaskStack(h.maskStack):this.renderer.mask.setMaskStack(this.defaultMaskStack);this.sourceFrame.copyFrom(e);this.destinationFrame.copyFrom(g)}clear(b,e){var g=this.current?this.current.baseTexture.clear:this.renderer.background.backgroundColor;b=k.Color.shared.setValue(b||g);(this.current&&0<this.current.baseTexture.alphaMode||!this.current&&this._rendererPremultipliedAlpha)&&b.premultiply(b.alpha);g=this.destinationFrame;const f=this.current?this.current.baseTexture:
this.renderer._view.screen;if(g=g.width!==f.width||g.height!==f.height){let {x:h,y:n,width:q,height:t}=this.viewportFrame;h=Math.round(h);n=Math.round(n);q=Math.round(q);t=Math.round(t);this.renderer.gl.enable(this.renderer.gl.SCISSOR_TEST);this.renderer.gl.scissor(h,n,q,t)}this.renderer.framebuffer.clear(b.red,b.green,b.blue,b.alpha,e);g&&this.renderer.scissor.pop()}resize(){this.bind(null)}reset(){this.bind(null)}destroy(){this.renderer=null}}a.extension={type:r.ExtensionType.RendererSystem,name:"renderTexture"};
r.extensions.add(a);p.RenderTextureSystem=a}
goog.provide("module$node_modules$$pixi$core$lib$renderTexture$RenderTextureSystem");
goog.global. module$node_modules$$pixi$core$lib$renderTexture$RenderTextureSystem=shadow.js.require(161, {});
