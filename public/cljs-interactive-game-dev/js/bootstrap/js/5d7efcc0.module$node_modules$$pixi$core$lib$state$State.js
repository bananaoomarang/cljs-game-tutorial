shadow$provide[76]=function(r,l,A,p){var k=l(0);class m{constructor(){this.data=0;this.blendMode=k.BLEND_MODES.NORMAL;this.polygonOffset=0;this.depthMask=this.blend=!0}get blend(){return!!(this.data&1)}set blend(d){!!(this.data&1)!==d&&(this.data^=1)}get offsets(){return!!(this.data&2)}set offsets(d){!!(this.data&2)!==d&&(this.data^=2)}get culling(){return!!(this.data&4)}set culling(d){!!(this.data&4)!==d&&(this.data^=4)}get depthTest(){return!!(this.data&8)}set depthTest(d){!!(this.data&8)!==d&&
(this.data^=8)}get depthMask(){return!!(this.data&32)}set depthMask(d){!!(this.data&32)!==d&&(this.data^=32)}get clockwiseFrontFace(){return!!(this.data&16)}set clockwiseFrontFace(d){!!(this.data&16)!==d&&(this.data^=16)}get blendMode(){return this._blendMode}set blendMode(d){this.blend=d!==k.BLEND_MODES.NONE;this._blendMode=d}get polygonOffset(){return this._polygonOffset}set polygonOffset(d){this.offsets=!!d;this._polygonOffset=d}static for2d(){const d=new m;return d.depthTest=!1,d.blend=!0,d}}
m.prototype.toString=function(){return`[@pixi/core:State blendMode=${this.blendMode} clockwiseFrontFace=${this.clockwiseFrontFace} culling=${this.culling} depthMask=${this.depthMask} polygonOffset=${this.polygonOffset}]`};p.State=m}
goog.provide("module$node_modules$$pixi$core$lib$state$State");
goog.global. module$node_modules$$pixi$core$lib$state$State=shadow.js.require(76, {});
