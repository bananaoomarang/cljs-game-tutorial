shadow$provide[313]=function(r,l,A,p){var k=l(307);l(312);var m=l(311);const d={[827611204]:k.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT1_EXT,[861165636]:k.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT3_EXT,[894720068]:k.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT},c={70:k.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT1_EXT,71:k.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT1_EXT,73:k.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT3_EXT,74:k.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT3_EXT,76:k.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT,
77:k.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT,72:k.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,75:k.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,78:k.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,96:k.INTERNAL_FORMATS.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT,95:k.INTERNAL_FORMATS.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT,98:k.INTERNAL_FORMATS.COMPRESSED_RGBA_BPTC_UNORM_EXT,99:k.INTERNAL_FORMATS.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT};p.parseDDS=function(a){var b=new Uint32Array(a);
if(542327876!==b[0])throw Error("Invalid DDS file magic word");var e=new Uint32Array(a,0,124/Uint32Array.BYTES_PER_ELEMENT);const g=e[3],f=e[4],h=e[7];e=new Uint32Array(a,19*Uint32Array.BYTES_PER_ELEMENT,32/Uint32Array.BYTES_PER_ELEMENT);var n=e[1];if(n&4){e=e[2];if(808540228!==e)return b=d[e],a=new Uint8Array(a,128),[new m.CompressedTextureResource(a,{format:b,width:f,height:g,levels:h})];b=new Uint32Array(b.buffer,128,20/Uint32Array.BYTES_PER_ELEMENT);e=b[0];n=b[1];var q=b[2];b=b[3];const u=c[e];
if(void 0===u)throw Error(`DDSParser cannot parse texture data with DXGI format ${e}`);if(4===q)throw Error("DDSParser does not support cubemap textures");if(6===n)throw Error("DDSParser does not supported 3D texture data");e=[];if(1===b)e.push(new Uint8Array(a,148));else{q=k.INTERNAL_FORMAT_TO_BYTES_PER_PIXEL[u];n=0;var t=f;let v=g;for(let x=0;x<h;x++)n+=Math.max(1,t+3&-4)*Math.max(1,v+3&-4)*q,t>>>=1,v>>>=1;q=148;for(t=0;t<b;t++)e.push(new Uint8Array(a,q,n)),q+=n}return e.map(v=>new m.CompressedTextureResource(v,
{format:u,width:f,height:g,levels:h}))}throw n&64?Error("DDSParser does not support uncompressed texture data."):n&512?Error("DDSParser does not supported YUV uncompressed texture data."):n&131072?Error("DDSParser does not support single-channel (lumninance) texture data!"):n&2?Error("DDSParser does not support single-channel (alpha) texture data!"):Error("DDSParser failed to load a texture file due to an unknown reason!");}}
goog.provide("module$node_modules$$pixi$compressed_textures$lib$parsers$parseDDS");
goog.global. module$node_modules$$pixi$compressed_textures$lib$parsers$parseDDS=shadow.js.require(313, {});
