shadow$provide[194]=function(r,l,A,p){r=l(73);var k=l(193);class m{constructor(d){this.renderer=d;this.managedBuffers={};this.boundBufferBases={}}destroy(){this.renderer=null}contextChange(){this.disposeAll(!0);this.gl=this.renderer.gl;this.CONTEXT_UID=this.renderer.CONTEXT_UID}bind(d){const {gl:c,CONTEXT_UID:a}=this,b=d._glBuffers[a]||this.createGLBuffer(d);c.bindBuffer(d.type,b.buffer)}unbind(d){const {gl:c}=this;c.bindBuffer(d,null)}bindBufferBase(d,c){const {gl:a,CONTEXT_UID:b}=this;if(this.boundBufferBases[c]!==
d){const e=d._glBuffers[b]||this.createGLBuffer(d);this.boundBufferBases[c]=d;a.bindBufferBase(a.UNIFORM_BUFFER,c,e.buffer)}}bindBufferRange(d,c,a){const {gl:b,CONTEXT_UID:e}=this;a=a||0;d=d._glBuffers[e]||this.createGLBuffer(d);b.bindBufferRange(b.UNIFORM_BUFFER,c||0,d.buffer,256*a,256)}update(d){const {gl:c,CONTEXT_UID:a}=this,b=d._glBuffers[a]||this.createGLBuffer(d);if(d._updateID!==b.updateID)if(b.updateID=d._updateID,c.bindBuffer(d.type,b.buffer),b.byteLength>=d.data.byteLength)c.bufferSubData(d.type,
0,d.data);else{const e=d.static?c.STATIC_DRAW:c.DYNAMIC_DRAW;b.byteLength=d.data.byteLength;c.bufferData(d.type,d.data,e)}}dispose(d,c){if(this.managedBuffers[d.id]){delete this.managedBuffers[d.id];var a=d._glBuffers[this.CONTEXT_UID],b=this.gl;d.disposeRunner.remove(this);a&&(c||b.deleteBuffer(a.buffer),delete d._glBuffers[this.CONTEXT_UID])}}disposeAll(d){const c=Object.keys(this.managedBuffers);for(let a=0;a<c.length;a++)this.dispose(this.managedBuffers[c[a]],d)}createGLBuffer(d){const {CONTEXT_UID:c,
gl:a}=this;return d._glBuffers[c]=new k.GLBuffer(a.createBuffer()),this.managedBuffers[d.id]=d,d.disposeRunner.add(this),d._glBuffers[c]}}m.extension={type:r.ExtensionType.RendererSystem,name:"buffer"};r.extensions.add(m);p.BufferSystem=m}
goog.provide("module$node_modules$$pixi$core$lib$geometry$BufferSystem");
goog.global. module$node_modules$$pixi$core$lib$geometry$BufferSystem=shadow.js.require(194, {});
