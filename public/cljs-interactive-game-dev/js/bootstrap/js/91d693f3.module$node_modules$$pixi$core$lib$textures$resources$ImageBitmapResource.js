shadow$provide[203]=function(r,l,A,p){var k=l(0),m=l(8);r=l(136);class d extends r.BaseImageResource{constructor(c,a){a=a||{};let b,e,g;"string"==typeof c?(b=d.EMPTY,e=c,g=!0):(b=c,e=null,g=!1);super(b);this.url=e;this.crossOrigin=a.crossOrigin??!0;this.alphaMode="number"==typeof a.alphaMode?a.alphaMode:null;this.ownsImageBitmap=a.ownsImageBitmap??g;this._load=null;!1!==a.autoLoad&&this.load()}load(){return this._load?this._load:(this._load=new Promise(async(c,a)=>{if(null===this.url)c(this);else try{const g=
await m.settings.ADAPTER.fetch(this.url,{mode:this.crossOrigin?"cors":"no-cors"});if(!this.destroyed){var b=await g.blob();if(!this.destroyed){var e=await createImageBitmap(b,{premultiplyAlpha:null===this.alphaMode||this.alphaMode===k.ALPHA_MODES.UNPACK?"premultiply":"none"});this.destroyed?e.close():(this.source=e,this.update(),c(this))}}}catch(g){this.destroyed||(a(g),this.onError.emit(g))}}),this._load)}upload(c,a,b){return this.source instanceof ImageBitmap?("number"==typeof this.alphaMode&&(a.alphaMode=
this.alphaMode),super.upload(c,a,b)):(this.load(),!1)}dispose(){this.ownsImageBitmap&&this.source instanceof ImageBitmap&&this.source.close();super.dispose();this._load=null}static test(c){return!!globalThis.createImageBitmap&&"u">typeof ImageBitmap&&("string"==typeof c||c instanceof ImageBitmap)}static get EMPTY(){return d._EMPTY=d._EMPTY??m.settings.ADAPTER.createCanvas(0,0),d._EMPTY}}p.ImageBitmapResource=d}
goog.provide("module$node_modules$$pixi$core$lib$textures$resources$ImageBitmapResource");
goog.global. module$node_modules$$pixi$core$lib$textures$resources$ImageBitmapResource=shadow.js.require(203, {});
