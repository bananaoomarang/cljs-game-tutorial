shadow$provide[402]=function(r,l,A,p){var k=l(209);r=l(364);const m=class extends r.TextStyle{constructor(){super(...arguments);this._fonts=[];this._overrides=[];this._stylesheet="";this.fontsDirty=!1}static from(d){return new m(Object.keys(m.defaultOptions).reduce((c,a)=>({...c,[a]:d[a]}),{}))}cleanFonts(){0<this._fonts.length&&(this._fonts.forEach(d=>{URL.revokeObjectURL(d.src);d.refs--;0===d.refs&&(d.fontFace&&document.fonts.delete(d.fontFace),delete m.availableFonts[d.originalUrl])}),this.fontFamily=
"Arial",this._fonts.length=0,this.styleID++,this.fontsDirty=!0)}loadFont(d,c={}){const {availableFonts:a}=m;if(a[d]){const b=a[d];return this._fonts.push(b),b.refs++,this.styleID++,this.fontsDirty=!0,Promise.resolve()}return k.settings.ADAPTER.fetch(d).then(b=>b.blob()).then(async b=>new Promise((e,g)=>{const f=URL.createObjectURL(b),h=new FileReader;h.onload=()=>e([f,h.result]);h.onerror=g;h.readAsDataURL(b)})).then(async([b,e])=>{b=Object.assign({family:k.utils.path.basename(d,k.utils.path.extname(d)),
weight:"normal",style:"normal",display:"auto",src:b,dataSrc:e,refs:1,originalUrl:d,fontFace:null},c);a[d]=b;this._fonts.push(b);this.styleID++;e=new FontFace(b.family,`url(${b.src})`,{weight:b.weight,style:b.style,display:b.display});b.fontFace=e;await e.load();document.fonts.add(e);await document.fonts.ready;this.styleID++;this.fontsDirty=!0})}addOverride(...d){d=d.filter(c=>!this._overrides.includes(c));0<d.length&&(this._overrides.push(...d),this.styleID++)}removeOverride(...d){const c=d.filter(a=>
this._overrides.includes(a));0<c.length&&(this._overrides=this._overrides.filter(a=>!c.includes(a)),this.styleID++)}toCSS(d){return[`transform: scale(${d})`,"transform-origin: top left;display: inline-block",`color: ${this.normalizeColor(this.fill)}`,`font-size: ${this.fontSize}px`,`font-family: ${this.fontFamily}`,`font-weight: ${this.fontWeight}`,`font-style: ${this.fontStyle}`,`font-variant: ${this.fontVariant}`,`letter-spacing: ${this.letterSpacing}px`,`text-align: ${this.align}`,`padding: ${this.padding}px`,
`white-space: ${this.whiteSpace}`,...(this.lineHeight?[`line-height: ${this.lineHeight}px`]:[]),...(this.wordWrap?[`word-wrap: ${this.breakWords?"break-all":"break-word"}`,`max-width: ${this.wordWrapWidth}px`]:[]),...(this.strokeThickness?[`-webkit-text-stroke-width: ${this.strokeThickness}px`,`-webkit-text-stroke-color: ${this.normalizeColor(this.stroke)}`,`text-stroke-width: ${this.strokeThickness}px`,`text-stroke-color: ${this.normalizeColor(this.stroke)}`,"paint-order: stroke"]:[]),...(this.dropShadow?
[this.dropShadowToCSS()]:[]),...this._overrides].join(";")}toGlobalCSS(){return this._fonts.reduce((d,c)=>`${d}
            @font-face {
                font-family: "${c.family}";
                src: url('${c.dataSrc}');
                font-weight: ${c.weight};
                font-style: ${c.style};
                font-display: ${c.display};
            }`,this._stylesheet)}get stylesheet(){return this._stylesheet}set stylesheet(d){this._stylesheet!==d&&(this._stylesheet=d,this.styleID++)}normalizeColor(d){return Array.isArray(d)&&(d=k.utils.rgb2hex(d)),"number"==typeof d?k.utils.hex2string(d):d}dropShadowToCSS(){let d=this.normalizeColor(this.dropShadowColor);var c=this.dropShadowAlpha;const a=Math.round(Math.cos(this.dropShadowAngle)*this.dropShadowDistance),b=Math.round(Math.sin(this.dropShadowAngle)*this.dropShadowDistance);d.startsWith("#")&&
1>c&&(d+=(255*c|0).toString(16).padStart(2,"0"));c=`${a}px ${b}px`;return 0<this.dropShadowBlur?`text-shadow: ${c} ${this.dropShadowBlur}px ${d}`:`text-shadow: ${c} ${d}`}reset(){Object.assign(this,m.defaultOptions)}onBeforeDraw(){const {fontsDirty:d}=this;return this.fontsDirty=!1,this.isSafari&&0<this._fonts.length&&d?new Promise(c=>setTimeout(c,100)):Promise.resolve()}get isSafari(){const {userAgent:d}=k.settings.ADAPTER.getNavigator();return/^((?!chrome|android).)*safari/i.test(d)}set fillGradientStops(d){console.warn("[HTMLTextStyle] fillGradientStops is not supported by HTMLText")}get fillGradientStops(){return super.fillGradientStops}set fillGradientType(d){console.warn("[HTMLTextStyle] fillGradientType is not supported by HTMLText")}get fillGradientType(){return super.fillGradientType}set miterLimit(d){console.warn("[HTMLTextStyle] miterLimit is not supported by HTMLText")}get miterLimit(){return super.miterLimit}set trim(d){console.warn("[HTMLTextStyle] trim is not supported by HTMLText")}get trim(){return super.trim}set textBaseline(d){console.warn("[HTMLTextStyle] textBaseline is not supported by HTMLText")}get textBaseline(){return super.textBaseline}set leading(d){console.warn("[HTMLTextStyle] leading is not supported by HTMLText")}get leading(){return super.leading}set lineJoin(d){console.warn("[HTMLTextStyle] lineJoin is not supported by HTMLText")}get lineJoin(){return super.lineJoin}};
r=m;r.availableFonts={};r.defaultOptions={align:"left",breakWords:!1,dropShadow:!1,dropShadowAlpha:1,dropShadowAngle:Math.PI/6,dropShadowBlur:0,dropShadowColor:"black",dropShadowDistance:5,fill:"black",fontFamily:"Arial",fontSize:26,fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",letterSpacing:0,lineHeight:0,padding:0,stroke:"black",strokeThickness:0,whiteSpace:"normal",wordWrap:!1,wordWrapWidth:100};p.HTMLTextStyle=r}
goog.provide("module$node_modules$$pixi$text_html$lib$HTMLTextStyle");
goog.global. module$node_modules$$pixi$text_html$lib$HTMLTextStyle=shadow.js.require(402, {});
