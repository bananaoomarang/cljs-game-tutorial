shadow$provide[224]=function(r,l,A,p){p.generateBlurVertSource=function(k,m){const d=Math.ceil(k/2);let c="\n    attribute vec2 aVertexPosition;\n\n    uniform mat3 projectionMatrix;\n\n    uniform float strength;\n\n    varying vec2 vBlurTexCoords[%size%];\n\n    uniform vec4 inputSize;\n    uniform vec4 outputFrame;\n\n    vec4 filterVertexPosition( void )\n    {\n        vec2 position \x3d aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n\n        return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n    }\n\n    vec2 filterTextureCoord( void )\n    {\n        return aVertexPosition * (outputFrame.zw * inputSize.zw);\n    }\n\n    void main(void)\n    {\n        gl_Position \x3d filterVertexPosition();\n\n        vec2 textureCoord \x3d filterTextureCoord();\n        %blur%\n    }",
a="",b;m?b="vBlurTexCoords[%index%] \x3d  textureCoord + vec2(%sampleIndex% * strength, 0.0);":b="vBlurTexCoords[%index%] \x3d  textureCoord + vec2(0.0, %sampleIndex% * strength);";for(m=0;m<k;m++){let e=b.replace("%index%",m.toString());e=e.replace("%sampleIndex%",`${m-(d-1)}.0`);a+=e;a+="\n"}return c=c.replace("%blur%",a),c=c.replace("%size%",k.toString()),c}}
goog.provide("module$node_modules$$pixi$filter_blur$lib$generateBlurVertSource");
goog.global. module$node_modules$$pixi$filter_blur$lib$generateBlurVertSource=shadow.js.require(224, {});
