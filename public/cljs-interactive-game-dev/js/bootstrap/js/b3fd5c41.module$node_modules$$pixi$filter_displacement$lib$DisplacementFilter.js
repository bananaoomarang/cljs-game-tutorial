shadow$provide[233]=function(r,l,A,p){var k=l(209),m=l(231),d=l(232);class c extends k.Filter{constructor(a,b){const e=new k.Matrix;a.renderable=!1;super(d.default,m.default,{mapSampler:a._texture,filterMatrix:e,scale:{x:1,y:1},rotation:new Float32Array([1,0,0,1])});this.maskSprite=a;this.maskMatrix=e;null==b&&(b=20);this.scale=new k.Point(b,b)}apply(a,b,e,g){this.uniforms.filterMatrix=a.calculateSpriteMatrix(this.maskMatrix,this.maskSprite);this.uniforms.scale.x=this.scale.x;this.uniforms.scale.y=
this.scale.y;const f=this.maskSprite.worldTransform,h=Math.sqrt(f.a*f.a+f.b*f.b),n=Math.sqrt(f.c*f.c+f.d*f.d);0!==h&&0!==n&&(this.uniforms.rotation[0]=f.a/h,this.uniforms.rotation[1]=f.b/h,this.uniforms.rotation[2]=f.c/n,this.uniforms.rotation[3]=f.d/n);a.applyFilter(this,b,e,g)}get map(){return this.uniforms.mapSampler}set map(a){this.uniforms.mapSampler=a}}p.DisplacementFilter=c}
goog.provide("module$node_modules$$pixi$filter_displacement$lib$DisplacementFilter");
goog.global. module$node_modules$$pixi$filter_displacement$lib$DisplacementFilter=shadow.js.require(233, {});
