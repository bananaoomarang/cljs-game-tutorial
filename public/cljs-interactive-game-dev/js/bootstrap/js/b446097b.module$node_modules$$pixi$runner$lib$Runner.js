shadow$provide[78]=function(r,l,A,p){class k{constructor(m){this.items=[];this._name=m;this._aliasCount=0}emit(m,d,c,a,b,e,g,f){if(8<arguments.length)throw Error("max arguments reached");const {name:h,items:n}=this;this._aliasCount++;for(let q=0,t=n.length;q<t;q++)n[q][h](m,d,c,a,b,e,g,f);return n===this.items&&this._aliasCount--,this}ensureNonAliasedItems(){0<this._aliasCount&&1<this.items.length&&(this._aliasCount=0,this.items=this.items.slice(0))}add(m){return m[this._name]&&(this.ensureNonAliasedItems(),
this.remove(m),this.items.push(m)),this}remove(m){m=this.items.indexOf(m);return-1!==m&&(this.ensureNonAliasedItems(),this.items.splice(m,1)),this}contains(m){return this.items.includes(m)}removeAll(){return this.ensureNonAliasedItems(),this.items.length=0,this}destroy(){this.removeAll();this.items.length=0;this._name=""}get empty(){return 0===this.items.length}get name(){return this._name}}Object.defineProperties(k.prototype,{dispatch:{value:k.prototype.emit},run:{value:k.prototype.emit}});p.Runner=
k}
goog.provide("module$node_modules$$pixi$runner$lib$Runner");
goog.global. module$node_modules$$pixi$runner$lib$Runner=shadow.js.require(78, {});
