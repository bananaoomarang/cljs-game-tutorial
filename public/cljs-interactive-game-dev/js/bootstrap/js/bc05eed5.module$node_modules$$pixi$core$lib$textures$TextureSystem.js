shadow$provide[176]=function(r,l,A,p){var k=l(0);r=l(73);var m=l(72),d=l(82),c=l(173),a=l(174),b=l(175);class e{constructor(g){this.renderer=g;this.boundTextures=[];this.currentLocation=-1;this.managedTextures=[];this._unknownBoundTextures=!1;this.unknownTexture=new d.BaseTexture;this.hasIntegerTextures=!1}contextChange(){var g=this.gl=this.renderer.gl;this.CONTEXT_UID=this.renderer.CONTEXT_UID;this.webGLVersion=this.renderer.context.webGLVersion;this.internalFormats=b.mapTypeAndFormatToInternalFormat(g);
this.samplerTypes=a.mapInternalFormatToSamplerType(g);var f=g.getParameter(g.MAX_TEXTURE_IMAGE_UNITS);this.boundTextures.length=f;for(let h=0;h<f;h++)this.boundTextures[h]=null;this.emptyTextures={};f=new c.GLTexture(g.createTexture());g.bindTexture(g.TEXTURE_2D,f.texture);g.texImage2D(g.TEXTURE_2D,0,g.RGBA,1,1,0,g.RGBA,g.UNSIGNED_BYTE,new Uint8Array(4));this.emptyTextures[g.TEXTURE_2D]=f;this.emptyTextures[g.TEXTURE_CUBE_MAP]=new c.GLTexture(g.createTexture());g.bindTexture(g.TEXTURE_CUBE_MAP,this.emptyTextures[g.TEXTURE_CUBE_MAP].texture);
for(f=0;6>f;f++)g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,g.RGBA,1,1,0,g.RGBA,g.UNSIGNED_BYTE,null);g.texParameteri(g.TEXTURE_CUBE_MAP,g.TEXTURE_MAG_FILTER,g.LINEAR);g.texParameteri(g.TEXTURE_CUBE_MAP,g.TEXTURE_MIN_FILTER,g.LINEAR);for(g=0;g<this.boundTextures.length;g++)this.bind(null,g)}bind(g,f=0){const {gl:h}=this;if(g=g?.castToBaseTexture(),g?.valid&&!g.parentTextureArray){g.touched=this.renderer.textureGC.count;const n=g._glTextures[this.CONTEXT_UID]||this.initTexture(g);this.boundTextures[f]!==
g&&(this.currentLocation!==f&&(this.currentLocation=f,h.activeTexture(h.TEXTURE0+f)),h.bindTexture(g.target,n.texture));n.dirtyId!==g.dirtyId?(this.currentLocation!==f&&(this.currentLocation=f,h.activeTexture(h.TEXTURE0+f)),this.updateTexture(g)):n.dirtyStyleId!==g.dirtyStyleId&&this.updateTextureStyle(g);this.boundTextures[f]=g}else this.currentLocation!==f&&(this.currentLocation=f,h.activeTexture(h.TEXTURE0+f)),h.bindTexture(h.TEXTURE_2D,this.emptyTextures[h.TEXTURE_2D].texture),this.boundTextures[f]=
null}reset(){this._unknownBoundTextures=!0;this.hasIntegerTextures=!1;this.currentLocation=-1;for(let g=0;g<this.boundTextures.length;g++)this.boundTextures[g]=this.unknownTexture}unbind(g){const {gl:f,boundTextures:h}=this;if(this._unknownBoundTextures){this._unknownBoundTextures=!1;for(var n=0;n<h.length;n++)h[n]===this.unknownTexture&&this.bind(null,n)}for(n=0;n<h.length;n++)h[n]===g&&(this.currentLocation!==n&&(f.activeTexture(f.TEXTURE0+n),this.currentLocation=n),f.bindTexture(g.target,this.emptyTextures[g.target].texture),
h[n]=null)}ensureSamplerType(g){const {boundTextures:f,hasIntegerTextures:h,CONTEXT_UID:n}=this;if(h)for(--g;0<=g;--g){const q=f[g];q&&q._glTextures[n].samplerType!==k.SAMPLER_TYPES.FLOAT&&this.renderer.texture.unbind(q)}}initTexture(g){const f=new c.GLTexture(this.gl.createTexture());return f.dirtyId=-1,g._glTextures[this.CONTEXT_UID]=f,this.managedTextures.push(g),g.on("dispose",this.destroyTexture,this),f}initTextureType(g,f){f.internalFormat=this.internalFormats[g.type]?.[g.format]??g.format;
f.samplerType=this.samplerTypes[f.internalFormat]??k.SAMPLER_TYPES.FLOAT;2===this.webGLVersion&&g.type===k.TYPES.HALF_FLOAT?f.type=this.gl.HALF_FLOAT:f.type=g.type}updateTexture(g){const f=g._glTextures[this.CONTEXT_UID];if(f){var h=this.renderer;if(this.initTextureType(g,f),g.resource?.upload(h,g,f))f.samplerType!==k.SAMPLER_TYPES.FLOAT&&(this.hasIntegerTextures=!0);else{const n=g.realWidth,q=g.realHeight;h=h.gl;(f.width!==n||f.height!==q||0>f.dirtyId)&&(f.width=n,f.height=q,h.texImage2D(g.target,
0,f.internalFormat,n,q,0,g.format,f.type,null))}g.dirtyStyleId!==f.dirtyStyleId&&this.updateTextureStyle(g);f.dirtyId=g.dirtyId}}destroyTexture(g,f){const {gl:h}=this;if(g=g.castToBaseTexture(),g._glTextures[this.CONTEXT_UID]&&(this.unbind(g),h.deleteTexture(g._glTextures[this.CONTEXT_UID].texture),g.off("dispose",this.destroyTexture,this),delete g._glTextures[this.CONTEXT_UID],!f))g=this.managedTextures.indexOf(g),-1!==g&&m.removeItems(this.managedTextures,g,1)}updateTextureStyle(g){const f=g._glTextures[this.CONTEXT_UID];
f&&(g.mipmap!==k.MIPMAP_MODES.POW2&&2===this.webGLVersion||g.isPowerOfTwo?f.mipmap=1<=g.mipmap:f.mipmap=!1,2===this.webGLVersion||g.isPowerOfTwo?f.wrapMode=g.wrapMode:f.wrapMode=k.WRAP_MODES.CLAMP,g.resource?.style(this.renderer,g,f)||this.setStyle(g,f),f.dirtyStyleId=g.dirtyStyleId)}setStyle(g,f){const h=this.gl;if(f.mipmap&&g.mipmap!==k.MIPMAP_MODES.ON_MANUAL&&h.generateMipmap(g.target),h.texParameteri(g.target,h.TEXTURE_WRAP_S,f.wrapMode),h.texParameteri(g.target,h.TEXTURE_WRAP_T,f.wrapMode),f.mipmap){if(h.texParameteri(g.target,
h.TEXTURE_MIN_FILTER,g.scaleMode===k.SCALE_MODES.LINEAR?h.LINEAR_MIPMAP_LINEAR:h.NEAREST_MIPMAP_NEAREST),(f=this.renderer.context.extensions.anisotropicFiltering)&&0<g.anisotropicLevel&&g.scaleMode===k.SCALE_MODES.LINEAR){const n=Math.min(g.anisotropicLevel,h.getParameter(f.MAX_TEXTURE_MAX_ANISOTROPY_EXT));h.texParameterf(g.target,f.TEXTURE_MAX_ANISOTROPY_EXT,n)}}else h.texParameteri(g.target,h.TEXTURE_MIN_FILTER,g.scaleMode===k.SCALE_MODES.LINEAR?h.LINEAR:h.NEAREST);h.texParameteri(g.target,h.TEXTURE_MAG_FILTER,
g.scaleMode===k.SCALE_MODES.LINEAR?h.LINEAR:h.NEAREST)}destroy(){this.renderer=null}}e.extension={type:r.ExtensionType.RendererSystem,name:"texture"};r.extensions.add(e);p.TextureSystem=e}
goog.provide("module$node_modules$$pixi$core$lib$textures$TextureSystem");
goog.global. module$node_modules$$pixi$core$lib$textures$TextureSystem=shadow.js.require(176, {});
