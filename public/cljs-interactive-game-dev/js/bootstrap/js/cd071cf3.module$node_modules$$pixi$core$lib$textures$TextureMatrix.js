shadow$provide[149]=function(r,l,A,p){var k=l(102);const m=new k.Matrix;class d{constructor(c,a){this._texture=c;this.mapCoord=new k.Matrix;this.uClampFrame=new Float32Array(4);this.uClampOffset=new Float32Array(2);this._textureID=-1;this.clampOffset=this._updateID=0;this.clampMargin="u"<typeof a?.5:a;this.isSimple=!1}get texture(){return this._texture}set texture(c){this._texture=c;this._textureID=-1}multiplyUvs(c,a){void 0===a&&(a=c);const b=this.mapCoord;for(let e=0;e<c.length;e+=2){const g=c[e],
f=c[e+1];a[e]=g*b.a+f*b.c+b.tx;a[e+1]=g*b.b+f*b.d+b.ty}return a}update(c){const a=this._texture;if(!a||!a.valid||!c&&this._textureID===a._updateID)return!1;this._textureID=a._updateID;this._updateID++;c=a._uvs;this.mapCoord.set(c.x1-c.x0,c.y1-c.y0,c.x3-c.x0,c.y3-c.y0,c.x0,c.y0);c=a.orig;var b=a.trim;b&&(m.set(c.width/b.width,0,0,c.height/b.height,-b.x/b.width,-b.y/b.height),this.mapCoord.append(m));c=a.baseTexture;b=this.uClampFrame;const e=this.clampMargin/c.resolution,g=this.clampOffset;return b[0]=
(a._frame.x+e+g)/c.width,b[1]=(a._frame.y+e+g)/c.height,b[2]=(a._frame.x+a._frame.width-e+g)/c.width,b[3]=(a._frame.y+a._frame.height-e+g)/c.height,this.uClampOffset[0]=g/c.realWidth,this.uClampOffset[1]=g/c.realHeight,this.isSimple=a._frame.width===c.width&&a._frame.height===c.height&&0===a.rotate,!0}}p.TextureMatrix=d}
goog.provide("module$node_modules$$pixi$core$lib$textures$TextureMatrix");
goog.global. module$node_modules$$pixi$core$lib$textures$TextureMatrix=shadow.js.require(149, {});
