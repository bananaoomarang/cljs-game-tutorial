shadow$provide[269]=function(r,l,A,p){var k=l(209);l(267);var m=l(266),d=l(263);class c{constructor(){this._parsers=[];this._parsersValidated=!1;this.parsers=new Proxy(this._parsers,{set:(a,b,e)=>(this._parsersValidated=!1,a[b]=e,!0)});this.promiseCache={}}reset(){this._parsersValidated=!1;this.promiseCache={}}_getLoadPromiseAndParser(a,b){const e={promise:null,parser:null};return e.promise=(async()=>{var g,f=null;if(b.loadParser&&(f=this._parserHash[b.loadParser],f||console.warn(`[Assets] specified load parser "${b.loadParser}" not found while loading ${a}`)),
!f){for(g=0;g<this.parsers.length;g++){var h=this.parsers[g];if(h.load&&h.test?.(a,b,this)){f=h;break}}if(!f)return console.warn(`[Assets] ${a} could not be loaded as we don't know how to parse it, ensure the correct parser has been added`),null}g=await f.load(a,b,this);e.parser=f;for(f=0;f<this.parsers.length;f++)h=this.parsers[f],h.parse&&h.parse&&await h.testParse?.(g,b,this)&&(g=await h.parse(g,b,this)||g,e.parser=h);return g})(),e}async load(a,b){this._parsersValidated||this._validateParsers();
let e=0;const g={},f=m.isSingleItem(a);a=d.convertToList(a,q=>({alias:[q],src:q}));const h=a.length,n=a.map(async q=>{const t=k.utils.path.toAbsolute(q.src);if(!g[q.src])try{this.promiseCache[t]||(this.promiseCache[t]=this._getLoadPromiseAndParser(t,q)),g[q.src]=await this.promiseCache[t].promise,b&&b(++e/h)}catch(u){throw delete this.promiseCache[t],delete g[q.src],Error(`[Loader.load] Failed to load ${t}.
${u}`);}});return await Promise.all(n),f?g[a[0].src]:g}async unload(a){a=d.convertToList(a,b=>({alias:[b],src:b})).map(async b=>{const e=k.utils.path.toAbsolute(b.src),g=this.promiseCache[e];if(g){const f=await g.promise;delete this.promiseCache[e];g.parser?.unload?.(f,b,this)}});await Promise.all(a)}_validateParsers(){this._parsersValidated=!0;this._parserHash=this._parsers.filter(a=>a.name).reduce((a,b)=>(a[b.name]&&console.warn(`[Assets] loadParser name conflict "${b.name}"`),{...a,[b.name]:b}),
{})}}p.Loader=c}
goog.provide("module$node_modules$$pixi$assets$lib$loader$Loader");
goog.global. module$node_modules$$pixi$assets$lib$loader$Loader=shadow.js.require(269, {});
