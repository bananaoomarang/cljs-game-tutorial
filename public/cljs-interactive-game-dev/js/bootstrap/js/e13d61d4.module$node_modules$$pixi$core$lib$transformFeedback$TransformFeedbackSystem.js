shadow$provide[177]=function(r,l,A,p){r=l(73);class k{constructor(m){this.renderer=m}contextChange(){this.gl=this.renderer.gl;this.CONTEXT_UID=this.renderer.CONTEXT_UID}bind(m){const {gl:d,CONTEXT_UID:c}=this;m=m._glTransformFeedbacks[c]||this.createGLTransformFeedback(m);d.bindTransformFeedback(d.TRANSFORM_FEEDBACK,m)}unbind(){const {gl:m}=this;m.bindTransformFeedback(m.TRANSFORM_FEEDBACK,null)}beginTransformFeedback(m,d){const {gl:c,renderer:a}=this;d&&a.shader.bind(d);c.beginTransformFeedback(m)}endTransformFeedback(){const {gl:m}=
this;m.endTransformFeedback()}createGLTransformFeedback(m){const {gl:d,renderer:c,CONTEXT_UID:a}=this,b=d.createTransformFeedback();m._glTransformFeedbacks[a]=b;d.bindTransformFeedback(d.TRANSFORM_FEEDBACK,b);for(let e=0;e<m.buffers.length;e++){const g=m.buffers[e];g&&(c.buffer.update(g),g._glBuffers[a].refCount++,d.bindBufferBase(d.TRANSFORM_FEEDBACK_BUFFER,e,g._glBuffers[a].buffer||null))}return d.bindTransformFeedback(d.TRANSFORM_FEEDBACK,null),m.disposeRunner.add(this),b}disposeTransformFeedback(m,
d){const c=m._glTransformFeedbacks[this.CONTEXT_UID],a=this.gl;m.disposeRunner.remove(this);const b=this.renderer.buffer;if(b)for(let e=0;e<m.buffers.length;e++){const g=m.buffers[e];if(!g)continue;const f=g._glBuffers[this.CONTEXT_UID];f&&(f.refCount--,0===f.refCount&&!d&&b.dispose(g,d))}c&&(d||a.deleteTransformFeedback(c),delete m._glTransformFeedbacks[this.CONTEXT_UID])}destroy(){this.renderer=null}}k.extension={type:r.ExtensionType.RendererSystem,name:"transformFeedback"};r.extensions.add(k);
p.TransformFeedbackSystem=k}
goog.provide("module$node_modules$$pixi$core$lib$transformFeedback$TransformFeedbackSystem");
goog.global. module$node_modules$$pixi$core$lib$transformFeedback$TransformFeedbackSystem=shadow.js.require(177, {});
