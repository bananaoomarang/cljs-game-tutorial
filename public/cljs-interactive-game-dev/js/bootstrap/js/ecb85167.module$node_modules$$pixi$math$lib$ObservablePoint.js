shadow$provide[100]=function(r,l,A,p){class k{constructor(m,d,c=0,a=0){this._x=c;this._y=a;this.cb=m;this.scope=d}clone(m=this.cb,d=this.scope){return new k(m,d,this._x,this._y)}set(m=0,d=m){return(this._x!==m||this._y!==d)&&(this._x=m,this._y=d,this.cb.call(this.scope)),this}copyFrom(m){return(this._x!==m.x||this._y!==m.y)&&(this._x=m.x,this._y=m.y,this.cb.call(this.scope)),this}copyTo(m){return m.set(this._x,this._y),m}equals(m){return m.x===this._x&&m.y===this._y}get x(){return this._x}set x(m){this._x!==
m&&(this._x=m,this.cb.call(this.scope))}get y(){return this._y}set y(m){this._y!==m&&(this._y=m,this.cb.call(this.scope))}}k.prototype.toString=function(){return`[@pixi/math:ObservablePoint x=${this.x} y=${this.y} scope=${this.scope}]`};p.ObservablePoint=k}
goog.provide("module$node_modules$$pixi$math$lib$ObservablePoint");
goog.global. module$node_modules$$pixi$math$lib$ObservablePoint=shadow.js.require(100, {});
