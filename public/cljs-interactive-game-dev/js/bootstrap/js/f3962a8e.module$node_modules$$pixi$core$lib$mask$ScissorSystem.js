shadow$provide[156]=function(r,l,A,p){r=l(73);var k=l(102),m=l(8),d=l(155);const c=new k.Matrix,a=[];l=(()=>{const b=class extends d.AbstractMaskSystem{constructor(e){super(e);this.glConst=m.settings.ADAPTER.getWebGLRenderingContext().SCISSOR_TEST}getStackLength(){const e=this.maskStack[this.maskStack.length-1];return e?e._scissorCounter:0}calcScissorRect(e){if(!e._scissorRectLocal){var g=e._scissorRect,{maskObject:f}=e,{renderer:h}=this,n=h.renderTexture;f=f.getBounds(!0,a.pop()??new k.Rectangle);
this.roundFrameToPixels(f,n.current?n.current.resolution:h.resolution,n.sourceFrame,n.destinationFrame,h.projection.transform);g&&f.fit(g);e._scissorRectLocal=f}}static isMatrixRotated(e){if(!e)return!1;const {a:g,b:f,c:h,d:n}=e;return(1E-4<Math.abs(f)||1E-4<Math.abs(h))&&(1E-4<Math.abs(g)||1E-4<Math.abs(n))}testScissor(e){const {maskObject:g}=e;if(!g.isFastRect||!g.isFastRect()||b.isMatrixRotated(g.worldTransform)||b.isMatrixRotated(this.renderer.projection.transform))return!1;this.calcScissorRect(e);
e=e._scissorRectLocal;return 0<e.width&&0<e.height}roundFrameToPixels(e,g,f,h,n){b.isMatrixRotated(n)||(n=n?c.copyFrom(n):c.identity(),n.translate(-f.x,-f.y).scale(h.width/f.width,h.height/f.height).translate(h.x,h.y),this.renderer.filter.transformAABB(n,e),e.fit(h),e.x=Math.round(e.x*g),e.y=Math.round(e.y*g),e.width=Math.round(e.width*g),e.height=Math.round(e.height*g))}push(e){e._scissorRectLocal||this.calcScissorRect(e);const {gl:g}=this.renderer;e._scissorRect||g.enable(g.SCISSOR_TEST);e._scissorCounter++;
e._scissorRect=e._scissorRectLocal;this._useCurrent()}pop(e){const {gl:g}=this.renderer;e&&a.push(e._scissorRectLocal);0<this.getStackLength()?this._useCurrent():g.disable(g.SCISSOR_TEST)}_useCurrent(){const e=this.maskStack[this.maskStack.length-1]._scissorRect;let g;this.renderer.renderTexture.current?g=e.y:g=this.renderer.height-e.height-e.y;this.renderer.gl.scissor(e.x,g,e.width,e.height)}};return b})();l.extension={type:r.ExtensionType.RendererSystem,name:"scissor"};r.extensions.add(l);p.ScissorSystem=
l}
goog.provide("module$node_modules$$pixi$core$lib$mask$ScissorSystem");
goog.global. module$node_modules$$pixi$core$lib$mask$ScissorSystem=shadow.js.require(156, {});
