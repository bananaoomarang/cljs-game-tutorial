shadow$provide[215]=function(r,l,A,p){var k=l(209),m=l(214);const d=new k.Point,c=new Uint16Array([0,1,2,0,2,3]);class a extends m.Container{constructor(b){super();this._anchor=new k.ObservablePoint(this._onAnchorUpdate,this,b?b.defaultAnchor.x:0,b?b.defaultAnchor.y:0);this._texture=null;this._height=this._width=0;this._tintColor=new k.Color(16777215);this._tintRGB=null;this.tint=16777215;this.blendMode=k.BLEND_MODES.NORMAL;this._cachedTint=16777215;this.uvs=null;this.texture=b||k.Texture.EMPTY;this.vertexData=
new Float32Array(8);this.vertexTrimmedData=null;this._textureTrimmedID=this._transformTrimmedID=this._textureID=this._transformID=-1;this.indices=c;this.pluginName="batch";this.isSprite=!0;this._roundPixels=k.settings.ROUND_PIXELS}_onTextureUpdate(){this._textureTrimmedID=this._textureID=-1;this._cachedTint=16777215;this._width&&(this.scale.x=k.utils.sign(this.scale.x)*this._width/this._texture.orig.width);this._height&&(this.scale.y=k.utils.sign(this.scale.y)*this._height/this._texture.orig.height)}_onAnchorUpdate(){this._transformTrimmedID=
this._transformID=-1}calculateVertices(){var b=this._texture;if(this._transformID!==this.transform._worldID||this._textureID!==b._updateID){this._textureID!==b._updateID&&(this.uvs=this._texture._uvs.uvsFloat32);this._transformID=this.transform._worldID;this._textureID=b._updateID;var e=this.transform.worldTransform,g=e.a,f=e.b,h=e.c,n=e.d,q=e.tx,t=e.ty;e=this.vertexData;var u=b.trim;b=b.orig;var v=this._anchor,x=0,z=0,y=0,C=0;if(u?(z=u.x-v._x*b.width,x=z+u.width,C=u.y-v._y*b.height,y=C+u.height):
(z=-v._x*b.width,x=z+b.width,C=-v._y*b.height,y=C+b.height),e[0]=g*z+h*C+q,e[1]=n*C+f*z+t,e[2]=g*x+h*C+q,e[3]=n*C+f*x+t,e[4]=g*x+h*y+q,e[5]=n*y+f*x+t,e[6]=g*z+h*y+q,e[7]=n*y+f*z+t,this._roundPixels)for(g=k.settings.RESOLUTION,f=0;f<e.length;++f)e[f]=Math.round(e[f]*g)/g}}calculateTrimmedVertices(){if(!this.vertexTrimmedData)this.vertexTrimmedData=new Float32Array(8);else if(this._transformTrimmedID===this.transform._worldID&&this._textureTrimmedID===this._texture._updateID)return;this._transformTrimmedID=
this.transform._worldID;this._textureTrimmedID=this._texture._updateID;const b=this.vertexTrimmedData;var e=this._texture.orig,g=this._anchor,f=this.transform.worldTransform,h=f.a,n=f.b;const q=f.c,t=f.d,u=f.tx;f=f.ty;const v=-g._x*e.width,x=v+e.width;g=-g._y*e.height;e=g+e.height;if(b[0]=h*v+q*g+u,b[1]=t*g+n*v+f,b[2]=h*x+q*g+u,b[3]=t*g+n*x+f,b[4]=h*x+q*e+u,b[5]=t*e+n*x+f,b[6]=h*v+q*e+u,b[7]=t*e+n*v+f,this._roundPixels)for(h=k.settings.RESOLUTION,n=0;n<b.length;++n)b[n]=Math.round(b[n]*h)/h}_render(b){this.calculateVertices();
b.batch.setObjectRenderer(b.plugins[this.pluginName]);b.plugins[this.pluginName].render(this)}_calculateBounds(){const b=this._texture.trim,e=this._texture.orig;!b||b.width===e.width&&b.height===e.height?(this.calculateVertices(),this._bounds.addQuad(this.vertexData)):(this.calculateTrimmedVertices(),this._bounds.addQuad(this.vertexTrimmedData))}getLocalBounds(b){return 0===this.children.length?(this._localBounds||(this._localBounds=new m.Bounds),this._localBounds.minX=this._texture.orig.width*-this._anchor._x,
this._localBounds.minY=this._texture.orig.height*-this._anchor._y,this._localBounds.maxX=this._texture.orig.width*(1-this._anchor._x),this._localBounds.maxY=this._texture.orig.height*(1-this._anchor._y),b||(this._localBoundsRect||(this._localBoundsRect=new k.Rectangle),b=this._localBoundsRect),this._localBounds.getRectangle(b)):super.getLocalBounds.call(this,b)}containsPoint(b){this.worldTransform.applyInverse(b,d);b=this._texture.orig.width;const e=this._texture.orig.height,g=-b*this.anchor.x;let f=
0;return d.x>=g&&d.x<g+b&&(f=-e*this.anchor.y,d.y>=f&&d.y<f+e)}destroy(b){(super.destroy(b),this._texture.off("update",this._onTextureUpdate,this),this._anchor=null,"boolean"==typeof b?b:b?.texture)&&this._texture.destroy(!("boolean"==typeof b?!b:!b?.baseTexture));this._texture=null}static from(b,e){b=b instanceof k.Texture?b:k.Texture.from(b,e);return new a(b)}set roundPixels(b){this._roundPixels!==b&&(this._transformID=-1,this._transformTrimmedID=-1);this._roundPixels=b}get roundPixels(){return this._roundPixels}get width(){return Math.abs(this.scale.x)*
this._texture.orig.width}set width(b){const e=k.utils.sign(this.scale.x)||1;this.scale.x=e*b/this._texture.orig.width;this._width=b}get height(){return Math.abs(this.scale.y)*this._texture.orig.height}set height(b){const e=k.utils.sign(this.scale.y)||1;this.scale.y=e*b/this._texture.orig.height;this._height=b}get anchor(){return this._anchor}set anchor(b){this._anchor.copyFrom(b)}get tint(){return this._tintColor.value}set tint(b){this._tintColor.setValue(b);this._tintRGB=this._tintColor.toLittleEndianNumber()}get tintValue(){return this._tintColor.toNumber()}get texture(){return this._texture}set texture(b){this._texture!==
b&&(this._texture&&this._texture.off("update",this._onTextureUpdate,this),this._texture=b||k.Texture.EMPTY,this._cachedTint=16777215,this._textureID=-1,this._textureTrimmedID=-1,b&&(b.baseTexture.valid?this._onTextureUpdate():b.once("update",this._onTextureUpdate,this)))}}p.Sprite=a}
goog.provide("module$node_modules$$pixi$sprite$lib$Sprite");
goog.global. module$node_modules$$pixi$sprite$lib$Sprite=shadow.js.require(215, {});
