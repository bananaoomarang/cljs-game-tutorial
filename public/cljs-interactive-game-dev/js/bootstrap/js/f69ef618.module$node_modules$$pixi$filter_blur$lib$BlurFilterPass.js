shadow$provide[225]=function(r,l,A,p){var k=l(209),m=l(223),d=l(224);class c extends k.Filter{constructor(a,b=8,e=4,g=k.Filter.defaultResolution,f=5){const h=d.generateBlurVertSource(f,a);f=m.generateBlurFragSource(f);super(h,f);this.horizontal=a;this.resolution=g;this._quality=0;this.quality=e;this.blur=b}apply(a,b,e,g){if(e?this.horizontal?this.uniforms.strength=1/e.width*(e.width/b.width):this.uniforms.strength=1/e.height*(e.height/b.height):this.horizontal?this.uniforms.strength=1/a.renderer.width*
(a.renderer.width/b.width):this.uniforms.strength=1/a.renderer.height*(a.renderer.height/b.height),this.uniforms.strength*=this.strength,this.uniforms.strength/=this.passes,1===this.passes)a.applyFilter(this,b,e,g);else{const f=a.getFilterTexture(),h=a.renderer;let n=f;this.state.blend=!1;a.applyFilter(this,b,n,k.CLEAR_MODES.CLEAR);for(let q=1;q<this.passes-1;q++){a.bindAndClear(b,k.CLEAR_MODES.BLIT);const t=this.uniforms.uSampler=n;n=b;b=t;h.shader.bind(this);h.geometry.draw(5)}this.state.blend=
!0;a.applyFilter(this,n,e,g);a.returnFilterTexture(f)}}get blur(){return this.strength}set blur(a){this.padding=1+2*Math.abs(a);this.strength=a}get quality(){return this._quality}set quality(a){this.passes=this._quality=a}}p.BlurFilterPass=c}
goog.provide("module$node_modules$$pixi$filter_blur$lib$BlurFilterPass");
goog.global. module$node_modules$$pixi$filter_blur$lib$BlurFilterPass=shadow.js.require(225, {});
