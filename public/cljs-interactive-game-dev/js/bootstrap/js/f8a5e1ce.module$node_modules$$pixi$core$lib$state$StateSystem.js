shadow$provide[170]=function(r,l,A,p){var k=l(0);r=l(73);var m=l(76),d=l(169);l=(()=>{const c=class{constructor(){this.gl=null;this.polygonOffset=this.stateId=0;this.blendMode=k.BLEND_MODES.NONE;this._blendEq=!1;this.map=[];this.map[0]=this.setBlend;this.map[1]=this.setOffset;this.map[2]=this.setCullFace;this.map[3]=this.setDepthTest;this.map[4]=this.setFrontFace;this.map[5]=this.setDepthMask;this.checks=[];this.defaultState=new m.State;this.defaultState.blend=!0}contextChange(a){this.gl=a;this.blendModes=
d.mapWebGLBlendModesToPixi(a);this.set(this.defaultState);this.reset()}set(a){if(a=a||this.defaultState,this.stateId!==a.data){var b=this.stateId^a.data;let e=0;for(;b;)b&1&&this.map[e].call(this,!!(a.data&1<<e)),b>>=1,e++;this.stateId=a.data}for(b=0;b<this.checks.length;b++)this.checks[b](this,a)}forceState(a){a=a||this.defaultState;for(var b=0;b<this.map.length;b++)this.map[b].call(this,!!(a.data&1<<b));for(b=0;b<this.checks.length;b++)this.checks[b](this,a);this.stateId=a.data}setBlend(a){this.updateCheck(c.checkBlendMode,
a);this.gl[a?"enable":"disable"](this.gl.BLEND)}setOffset(a){this.updateCheck(c.checkPolygonOffset,a);this.gl[a?"enable":"disable"](this.gl.POLYGON_OFFSET_FILL)}setDepthTest(a){this.gl[a?"enable":"disable"](this.gl.DEPTH_TEST)}setDepthMask(a){this.gl.depthMask(a)}setCullFace(a){this.gl[a?"enable":"disable"](this.gl.CULL_FACE)}setFrontFace(a){this.gl.frontFace(this.gl[a?"CW":"CCW"])}setBlendMode(a){if(a!==this.blendMode){this.blendMode=a;a=this.blendModes[a];var b=this.gl;2===a.length?b.blendFunc(a[0],
a[1]):b.blendFuncSeparate(a[0],a[1],a[2],a[3]);6===a.length?(this._blendEq=!0,b.blendEquationSeparate(a[4],a[5])):this._blendEq&&(this._blendEq=!1,b.blendEquationSeparate(b.FUNC_ADD,b.FUNC_ADD))}}setPolygonOffset(a,b){this.gl.polygonOffset(a,b)}reset(){this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,!1);this.forceState(this.defaultState);this._blendEq=!0;this.blendMode=-1;this.setBlendMode(0)}updateCheck(a,b){const e=this.checks.indexOf(a);b&&-1===e?this.checks.push(a):!b&&-1!==e&&this.checks.splice(e,
1)}static checkBlendMode(a,b){a.setBlendMode(b.blendMode)}static checkPolygonOffset(a,b){a.setPolygonOffset(1,b.polygonOffset)}destroy(){this.gl=null}};return c})();l.extension={type:r.ExtensionType.RendererSystem,name:"state"};r.extensions.add(l);p.StateSystem=l}
goog.provide("module$node_modules$$pixi$core$lib$state$StateSystem");
goog.global. module$node_modules$$pixi$core$lib$state$StateSystem=shadow.js.require(170, {});
