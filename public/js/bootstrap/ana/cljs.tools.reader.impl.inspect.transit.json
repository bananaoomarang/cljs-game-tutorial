["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/tools/reader/impl/inspect.cljs","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",35],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cljs.tools.reader.impl.inspect","~:reader-aliases",["^ "],"~:imports",null,"~:requires",["^ ","~$cljs.core","^C","~$goog","^D"],"~:seen",["^=",[]],"~:shadow/js-access-global",["^=",["Error"]],"~:uses",null,"~:defs",["^ ","~$inspect*",["^ ","^2",["^ ","^3","cljs/tools/reader/impl/inspect.cljs","^4",37,"^5",11,"^6",37,"^7",19],"^>","~$cljs.tools.reader.impl.inspect/inspect*","^3","cljs/tools/reader/impl/inspect.cljs","^7",19,"^5",1,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["~#list",["~$defmulti","^I","~$dispatch-inspect"]]],"^4",37,"^6",37,"~:tag","~$cljs.core/MultiFn"],"~$inspect*-col",["^ ","~:protocol-inline",null,"^2",["^ ","^3","cljs/tools/reader/impl/inspect.cljs","^4",13,"^5",8,"^6",13,"^7",20,"~:private",true,"~:arglists",["^O",["~$quote",["^O",[["~$truncate","~$col","~$start","~$end"]]]]]],"^V",true,"^>","~$cljs.tools.reader.impl.inspect/inspect*-col","^3","cljs/tools/reader/impl/inspect.cljs","^7",20,"~:method-params",["^O",[["^Y","^Z","^[","^10"]]],"~:protocol-impl",null,"~:arglists-meta",["^O",[null,null]],"^5",1,"^K",["^ ","^L","^M","^N",["^O",["~$defn-","^T",["^Y","^Z","^[","^10"],["^O",["~$let",["~$n",["^O",["~$count","^Z"]],"~$l",["^O",["~$if","^Y",0,["^O",["~$min",10,"~$n"]]]],"~$elements",["^O",["~$map",["^O",["~$partial","^I",true]],["^O",["~$take","~$l","^Z"]]]],"~$content",["^O",["~$apply","~$str",["^O",["~$interpose"," ","^1:"]]]],"~$suffix",["^O",["^18",["^O",["~$<","~$l","~$n"]],"..."]]],["^O",["^1@","^[","^1>","^1B","^10"]]]]]]],"~:variadic?",false,"^4",13,"~:ret-tag","~$string","^6",13,"~:max-fixed-arity",4,"~:fn-var",true,"^W",["^O",["^X",["^O",[["^Y","^Z","^[","^10"]]]]]],"^Q",["^ ","^U",null,"^2",["^ ","^3","cljs/tools/reader/impl/inspect.cljs","^4",21,"^5",8,"^6",21,"^7",24,"^V",true,"^W",["^O",["^X",["^O",[["~$_","~$x"]]]]]],"^V",true,"^>","~$cljs.tools.reader.impl.inspect/dispatch-inspect","^3","cljs/tools/reader/impl/inspect.cljs","^7",24,"^12",["^O",[["~$_","~$x"]]],"^13",null,"^14",["^O",[null,null]],"^5",1,"^K",["^ ","^L","^M","^N",["^O",["^15","^Q",["~$_","~$x"],["^O",["~$cond",["^O",["~$nil?","~$x"]],"~:nil",["^O",["~$string?","~$x"]],"~:string",["^O",["~$keyword?","~$x"]],"~:strable",["^O",["~$number?","~$x"]],"^1O",["^O",["~$symbol?","~$x"]],"^1O",["^O",["~$vector?","~$x"]],"~:vector",["^O",["~$list?","~$x"]],"~:list",["^O",["~$map?","~$x"]],"~:map",["^O",["~$set?","~$x"]],"~:set",["^O",["~$=","~$x",true]],"^1O",["^O",["~$=","~$x",false]],"^1O","~:default",["^O",["~$type","~$x"]]]]]]],"^1C",false,"^4",21,"^1D",["^=",["~$any","~$cljs.core/Keyword","~$clj-nil"]],"^6",21,"^1F",2,"^1G",true,"^W",["^O",["^X",["^O",[["~$_","~$x"]]]]]],"~$inspect",["^ ","^U",null,"^2",["^ ","^3","cljs/tools/reader/impl/inspect.cljs","^4",83,"^5",7,"^6",83,"^7",14,"^W",["^O",["^X",["^O",[["~$x"],["^Y","~$x"]]]]],"~:doc","Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \"true\")\n   or it may be a description (e.g. \"an instance of Foo\").\n   If truncate is true then return a very terse version of\n   the inspection.","~:top-fn",["^ ","^1C",false,"~:fixed-arity",2,"^1F",2,"^12",[["~$x"],["^Y","~$x"]],"^W",["^O",[["~$x"],["^Y","~$x"]]],"^14",["^O",[null,null]]]],"^>","~$cljs.tools.reader.impl.inspect/inspect","^3","cljs/tools/reader/impl/inspect.cljs","^7",14,"^25",["^ ","^1C",false,"^26",2,"^1F",2,"^12",[["~$x"],["^Y","~$x"]],"^W",["^O",[["~$x"],["^Y","~$x"]]],"^14",["^O",[null,null]]],"^12",[["~$x"],["^Y","~$x"]],"^13",null,"^26",2,"^14",["^O",[null,null]],"^5",1,"^K",["^ ","^L","^M","^N",["^O",["~$defn","^23","Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \"true\")\n   or it may be a description (e.g. \"an instance of Foo\").\n   If truncate is true then return a very terse version of\n   the inspection.",["^O",[["~$x"],["^O",["^I",false,"~$x"]]]],["^O",[["^Y","~$x"],["^O",["^I","^Y","~$x"]]]]]]],"^1C",false,"~:methods",[["^ ","^26",1,"^1C",false,"^R","^20"],["^ ","^26",2,"^1C",false,"^R","^20"]],"^4",83,"^6",83,"^1F",2,"^1G",true,"^W",["^O",[["~$x"],["^Y","~$x"]]],"^24","Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \"true\")\n   or it may be a description (e.g. \"an instance of Foo\").\n   If truncate is true then return a very terse version of\n   the inspection."]],"~:require-macros",["^ ","^C","^C"],"~:cljs.analyzer/constants",["^ ","^E",["^=",["^1Z","^1M","^1S","^1O","^1U","^1K","^1Y","~:hierarchy","^1W"]],"~:order",["^1K","^1M","^1O","^1S","^1U","^1W","^1Y","^1Z","^2<"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^D","^C"]]