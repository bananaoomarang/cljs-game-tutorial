["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/set.cljs","~:line",11,"~:column",8,"~:end-line",11,"~:end-column",19,"~:doc","Set operations such as union/intersection.","~:author","Rich Hickey"],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$clojure.set","~:reader-aliases",["^ "],"~:imports",null,"~:requires",["^ ","~$cljs.core","^E","~$goog","^F"],"~:seen",["^?",[]],"~:shadow/js-access-global",["^?",["Error"]],"~:uses",null,"~:defs",["^ ","~$union",["^ ","~:protocol-inline",null,"^2",["^ ","^3","clojure/set.cljs","^4",19,"^5",7,"^6",19,"^7",12,"~:arglists",["~#list",["~$quote",["^N",[[],["~$s1"],["^P","~$s2"],["^P","^Q","~$&","~$sets"]]]]],"^8","Return a set that is the union of the input sets","~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[[],["^P"],["^P","^Q"]],"^M",["^N",[[],["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]],"~:arglists-meta",["^N",[null,null,null,null]]]],"^@","~$clojure.set/union","^3","clojure/set.cljs","^7",12,"^S",["^ ","^T",true,"^U",2,"^V",2,"^W",[[],["^P"],["^P","^Q"]],"^M",["^N",[[],["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]],"^X",["^N",[null,null,null,null]]],"^W",[[],["^P"],["^P","^Q"]],"~:protocol-impl",null,"^U",2,"^X",["^N",[null,null,null,null]],"^5",1,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["^N",["~$defn","^K","Return a set that is the union of the input sets",["^N",[[],["^?",[]]]],["^N",[["^P"],"^P"]],["^N",[["^P","^Q"],["^N",["~$if",["^N",["~$<",["^N",["~$count","^P"]],["^N",["^15","^Q"]]]],["^N",["~$reduce","~$conj","^Q","^P"]],["^N",["^16","^17","^P","^Q"]]]]]],["^N",[["^P","^Q","~$&","^R"],["^N",["~$let",["~$bubbled-sets",["^N",["~$bubble-max-key","^15",["^N",["^17","^R","^Q","^P"]]]]],["^N",["^16","~$into",["^N",["~$first","^19"]],["^N",["~$rest","^19"]]]]]]]]]]],"^T",true,"~:methods",[["^ ","^U",0,"^T",false,"~:tag","~$cljs.core/ISet"],["^ ","^U",1,"^T",false],["^ ","^U",2,"^T",false,"^1?",["^?",[null,"~$any"]]],["^ ","^U",2,"^T",true,"^1?",["^?",[null,"^1A"]]]],"^4",19,"^6",19,"^V",2,"~:fn-var",true,"^M",["^N",[[],["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]],"^8","Return a set that is the union of the input sets"],"~$map-invert",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",97,"^5",7,"^6",97,"^7",17,"^M",["^N",["^O",["^N",[["~$m"]]]]],"^8","Returns the map with the vals mapped to the keys."],"^@","~$clojure.set/map-invert","^3","clojure/set.cljs","^7",17,"^W",["^N",[["~$m"]]],"^Z",null,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^1C","Returns the map with the vals mapped to the keys.",["~$m"],["^N",["~$persistent!",["^N",["~$reduce-kv",["^N",["~$fn",["~$m","~$k","~$v"],["^N",["~$assoc!","~$m","~$v","~$k"]]]],["^N",["~$transient",["^ "]]],"~$m"]]]]]]],"^T",false,"^4",97,"~:ret-tag","~$clj","^6",97,"^V",1,"^1B",true,"^M",["^N",["^O",["^N",[["~$m"]]]]],"^8","Returns the map with the vals mapped to the keys."],"~$join",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",105,"^5",7,"^6",105,"^7",11,"^M",["^N",["^O",["^N",[["~$xrel","~$yrel"],["^1M","^1N","~$km"]]]]],"^8","When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys.","^S",["^ ","^T",false,"^U",3,"^V",3,"^W",[["^1M","^1N"],["^1M","^1N","^1O"]],"^M",["^N",[["^1M","^1N"],["^1M","^1N","^1O"]]],"^X",["^N",[null,null]]]],"^@","~$clojure.set/join","^3","clojure/set.cljs","^7",11,"^S",["^ ","^T",false,"^U",3,"^V",3,"^W",[["^1M","^1N"],["^1M","^1N","^1O"]],"^M",["^N",[["^1M","^1N"],["^1M","^1N","^1O"]]],"^X",["^N",[null,null]]],"^W",[["^1M","^1N"],["^1M","^1N","^1O"]],"^Z",null,"^U",3,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^1L","When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys.",["^N",[["^1M","^1N"],["^N",["^14",["^N",["~$and",["^N",["~$seq","^1M"]],["^N",["^1R","^1N"]]]],["^N",["^18",["~$ks",["^N",["~$intersection",["^N",["~$set",["^N",["~$keys",["^N",["^1<","^1M"]]]]]],["^N",["^1U",["^N",["^1V",["^N",["^1<","^1N"]]]]]]]],["~$r","~$s"],["^N",["^14",["^N",["~$<=",["^N",["^15","^1M"]],["^N",["^15","^1N"]]]],["^1M","^1N"],["^1N","^1M"]]],"~$idx",["^N",["~$index","~$r","^1S"]]],["^N",["^16",["^N",["^1G",["~$ret","~$x"],["^N",["^18",["~$found",["^N",["^1X",["^N",["~$select-keys","~$x","^1S"]]]]],["^N",["^14","^1[",["^N",["^16",["^N",["~$fn*",["~$p1__14028#","~$p2__14029#"],["^N",["^17","^22",["^N",["~$merge","^23","~$x"]]]]]],"^1Z","^1["]],"^1Z"]]]]]],["^?",[]],"~$s"]]]],["^?",[]]]]]],["^N",[["^1M","^1N","^1O"],["^N",["^18",[["~$r","~$s","~$k"],["^N",["^14",["^N",["^1W",["^N",["^15","^1M"]],["^N",["^15","^1N"]]]],["^1M","^1N",["^N",["^1C","^1O"]]],["^1N","^1M","^1O"]]],"^1X",["^N",["^1Y","~$r",["^N",["~$vals","~$k"]]]]],["^N",["^16",["^N",["^1G",["^1Z","~$x"],["^N",["^18",["^1[",["^N",["^1X",["^N",["~$rename-keys",["^N",["^20","~$x",["^N",["^1V","~$k"]]]],"~$k"]]]]],["^N",["^14","^1[",["^N",["^16",["^N",["^21",["~$p1__14030#","~$p2__14031#"],["^N",["^17","^27",["^N",["^24","^28","~$x"]]]]]],"^1Z","^1["]],"^1Z"]]]]]],["^?",[]],"~$s"]]]]]]]]],"^T",false,"^1>",[["^ ","^U",2,"^T",false,"^1?",["^?",[null,"^1A","^1@"]]],["^ ","^U",3,"^T",false,"^1?",["^?",[null,"^1A"]]]],"^4",105,"^6",105,"^V",3,"^1B",true,"^M",["^N",[["^1M","^1N"],["^1M","^1N","^1O"]]],"^8","When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys."],"~$select",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",61,"^5",7,"^6",61,"^7",13,"^M",["^N",["^O",["^N",[["~$pred","~$xset"]]]]],"^8","Returns a set of the elements for which pred is true"],"^@","~$clojure.set/select","^3","clojure/set.cljs","^7",13,"^W",["^N",[["^2:","^2;"]]],"^Z",null,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^29","Returns a set of the elements for which pred is true",["^2:","^2;"],["^N",["^16",["^N",["^1G",["~$s","~$k"],["^N",["^14",["^N",["^2:","~$k"]],"~$s",["^N",["~$disj","~$s","~$k"]]]]]],"^2;","^2;"]]]]],"^T",false,"^4",61,"^1J",["^?",[null,"^1A"]],"^6",61,"^V",2,"^1B",true,"^M",["^N",["^O",["^N",[["^2:","^2;"]]]]],"^8","Returns a set of the elements for which pred is true"],"^1T",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",31,"^5",7,"^6",31,"^7",19,"^M",["^N",["^O",["^N",[["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]]]],"^8","Return a set that is the intersection of the input sets","^S",["^ ","^T",true,"^U",2,"^V",2,"^W",[["^P"],["^P","^Q"]],"^M",["^N",[["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]],"^X",["^N",[null,null,null]]]],"^@","~$clojure.set/intersection","^3","clojure/set.cljs","^7",19,"^S",["^ ","^T",true,"^U",2,"^V",2,"^W",[["^P"],["^P","^Q"]],"^M",["^N",[["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]],"^X",["^N",[null,null,null]]],"^W",[["^P"],["^P","^Q"]],"^Z",null,"^U",2,"^X",["^N",[null,null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^1T","Return a set that is the intersection of the input sets",["^N",[["^P"],"^P"]],["^N",[["^P","^Q"],["^N",["^14",["^N",["~$<",["^N",["^15","^Q"]],["^N",["^15","^P"]]]],["^N",["~$recur","^Q","^P"]],["^N",["^16",["^N",["^1G",["~$result","~$item"],["^N",["^14",["^N",["~$contains?","^Q","^2A"]],"^2@",["^N",["^2=","^2@","^2A"]]]]]],"^P","^P"]]]]]],["^N",[["^P","^Q","~$&","^R"],["^N",["^18",["^19",["^N",["^1:",["^N",["^21",["~$p1__13955#"],["^N",["~$-",["^N",["^15","^2C"]]]]]],["^N",["^17","^R","^Q","^P"]]]]],["^N",["^16","^1T",["^N",["^1<","^19"]],["^N",["^1=","^19"]]]]]]]]]]],"^T",true,"^1>",[["^ ","^U",1,"^T",false],["^ ","^U",2,"^T",false,"^1?",["^?",[null,"^1A"]]],["^ ","^U",2,"^T",true,"^1?",["^?",[null,"^1A"]]]],"^4",31,"^6",31,"^V",2,"^1B",true,"^M",["^N",[["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]],"^8","Return a set that is the intersection of the input sets"],"~$superset?",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",141,"^5",7,"^6",141,"^7",16,"^M",["^N",["^O",["^N",[["~$set1","~$set2"]]]]],"^8","Is set1 a superset of set2?"],"^@","~$clojure.set/superset?","^3","clojure/set.cljs","^7",16,"^W",["^N",[["^2E","^2F"]]],"^Z",null,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^2D","Is set1 a superset of set2?",["^2E","^2F"],["^N",["^1Q",["^N",["~$>=",["^N",["^15","^2E"]],["^N",["^15","^2F"]]]],["^N",["~$every?",["^N",["^21",["~$p1__14061#"],["^N",["^2B","^2E","^2J"]]]],"^2F"]]]]]]],"^T",false,"^4",141,"^1J","~$boolean","^6",141,"^V",2,"^1B",true,"^M",["^N",["^O",["^N",[["^2E","^2F"]]]]],"^8","Is set1 a superset of set2?"],"^1Y",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",87,"^5",7,"^6",87,"^7",12,"^M",["^N",["^O",["^N",[["^1M","^1S"]]]]],"^8","Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks."],"^@","~$clojure.set/index","^3","clojure/set.cljs","^7",12,"^W",["^N",[["^1M","^1S"]]],"^Z",null,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^1Y","Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks.",["^1M","^1S"],["^N",["^16",["^N",["^1G",["~$m","~$x"],["^N",["^18",["~$ik",["^N",["^20","~$x","^1S"]]],["^N",["~$assoc","~$m","^2M",["^N",["^17",["^N",["~$get","~$m","^2M",["^?",[]]]],"~$x"]]]]]]]],["^ "],"^1M"]]]]],"^T",false,"^4",87,"^1J",["^?",[null,"^1A"]],"^6",87,"^V",2,"^1B",true,"^M",["^N",["^O",["^N",[["^1M","^1S"]]]]],"^8","Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks."],"^1:",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",13,"^5",8,"^6",13,"^7",22,"~:private",true,"^M",["^N",["^O",["^N",[["~$k","~$coll"]]]]]],"^2P",true,"^@","~$clojure.set/bubble-max-key","^3","clojure/set.cljs","^7",22,"^W",["^N",[["~$k","^2Q"]]],"^Z",null,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["~$defn-","^1:",["~$k","^2Q"],"Move a maximal element of coll according to fn k (which returns a number) \n   to the front of coll.",["^N",["^18",["~$max",["^N",["~$apply","~$max-key","~$k","^2Q"]]],["^N",["~$cons","^2T",["^N",["~$remove",["^N",["^21",["~$p1__13931#"],["^N",["~$identical?","^2T","^2Y"]]]],"^2Q"]]]]]]]]],"^T",false,"^4",13,"^1J","^1K","^6",13,"^V",2,"^1B",true,"^M",["^N",["^O",["^N",[["~$k","^2Q"]]]]]],"~$subset?",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",135,"^5",7,"^6",135,"^7",14,"^M",["^N",["^O",["^N",[["^2E","^2F"]]]]],"^8","Is set1 a subset of set2?"],"^@","~$clojure.set/subset?","^3","clojure/set.cljs","^7",14,"^W",["^N",[["^2E","^2F"]]],"^Z",null,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^2[","Is set1 a subset of set2?",["^2E","^2F"],["^N",["^1Q",["^N",["^1W",["^N",["^15","^2E"]],["^N",["^15","^2F"]]]],["^N",["^2I",["^N",["^21",["~$p1__14055#"],["^N",["^2B","^2F","^31"]]]],"^2E"]]]]]]],"^T",false,"^4",135,"^1J","^2K","^6",135,"^V",2,"^1B",true,"^M",["^N",["^O",["^N",[["^2E","^2F"]]]]],"^8","Is set1 a subset of set2?"],"~$rename",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",82,"^5",7,"^6",82,"^7",13,"^M",["^N",["^O",["^N",[["^1M","~$kmap"]]]]],"^8","Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap"],"^@","~$clojure.set/rename","^3","clojure/set.cljs","^7",13,"^W",["^N",[["^1M","^33"]]],"^Z",null,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^32","Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap",["^1M","^33"],["^N",["^1U",["^N",["~$map",["^N",["^21",["~$p1__14011#"],["^N",["^26","^36","^33"]]]],"^1M"]]]]]]],"^T",false,"^4",82,"^1J",["^?",["^1K","^1A","^1@","~$cljs.core/MetaFn","~$clj-nil"]],"^6",82,"^V",2,"^1B",true,"^M",["^N",["^O",["^N",[["^1M","^33"]]]]],"^8","Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap"],"^26",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",72,"^5",7,"^6",72,"^7",18,"^M",["^N",["^O",["^N",[["^35","^33"]]]]],"^8","Returns the map with the keys in kmap renamed to the vals in kmap"],"^@","~$clojure.set/rename-keys","^3","clojure/set.cljs","^7",18,"^W",["^N",[["^35","^33"]]],"^Z",null,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^26","Returns the map with the keys in kmap renamed to the vals in kmap",["^35","^33"],["^N",["^16",["^N",["^1G",["~$m",["~$old","~$new"]],["^N",["^14",["^N",["^2B","^35","^3:"]],["^N",["^2N","~$m","^3;",["^N",["^2O","^35","^3:"]]]],"~$m"]]]],["^N",["^2U","~$dissoc","^35",["^N",["^1V","^33"]]]],"^33"]]]]],"^T",false,"^4",72,"^1J",["^?",[null,"^1A"]],"^6",72,"^V",2,"^1B",true,"^M",["^N",["^O",["^N",[["^35","^33"]]]]],"^8","Returns the map with the keys in kmap renamed to the vals in kmap"],"~$project",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",67,"^5",7,"^6",67,"^7",14,"^M",["^N",["^O",["^N",[["^1M","^1S"]]]]],"^8","Returns a rel of the elements of xrel with only the keys in ks"],"^@","~$clojure.set/project","^3","clojure/set.cljs","^7",14,"^W",["^N",[["^1M","^1S"]]],"^Z",null,"^X",["^N",[null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^3=","Returns a rel of the elements of xrel with only the keys in ks",["^1M","^1S"],["^N",["^1U",["^N",["^35",["^N",["^21",["~$p1__14000#"],["^N",["^20","^3?","^1S"]]]],"^1M"]]]]]]],"^T",false,"^4",67,"^1J",["^?",["^1K","^1A","^1@","^37","^38"]],"^6",67,"^V",2,"^1B",true,"^M",["^N",["^O",["^N",[["^1M","^1S"]]]]],"^8","Returns a rel of the elements of xrel with only the keys in ks"],"~$difference",["^ ","^L",null,"^2",["^ ","^3","clojure/set.cljs","^4",46,"^5",7,"^6",46,"^7",17,"^M",["^N",["^O",["^N",[["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]]]],"^8","Return a set that is the first set without elements of the remaining sets","^S",["^ ","^T",true,"^U",2,"^V",2,"^W",[["^P"],["^P","^Q"]],"^M",["^N",[["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]],"^X",["^N",[null,null,null]]]],"^@","~$clojure.set/difference","^3","clojure/set.cljs","^7",17,"^S",["^ ","^T",true,"^U",2,"^V",2,"^W",[["^P"],["^P","^Q"]],"^M",["^N",[["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]],"^X",["^N",[null,null,null]]],"^W",[["^P"],["^P","^Q"]],"^Z",null,"^U",2,"^X",["^N",[null,null,null]],"^5",1,"^[",["^ ","^10","^11","^12",["^N",["^13","^3@","Return a set that is the first set without elements of the remaining sets",["^N",[["^P"],"^P"]],["^N",[["^P","^Q"],["^N",["^14",["^N",["~$<",["^N",["^15","^P"]],["^N",["^15","^Q"]]]],["^N",["^16",["^N",["^1G",["^2@","^2A"],["^N",["^14",["^N",["^2B","^Q","^2A"]],["^N",["^2=","^2@","^2A"]],"^2@"]]]],"^P","^P"]],["^N",["^16","^2=","^P","^Q"]]]]]],["^N",[["^P","^Q","~$&","^R"],["^N",["^16","^3@","^P",["^N",["^17","^R","^Q"]]]]]]]]],"^T",true,"^1>",[["^ ","^U",1,"^T",false],["^ ","^U",2,"^T",false,"^1?",["^?",[null,"^1A"]]],["^ ","^U",2,"^T",true,"^1?",["^?",[null,"^1A"]]]],"^4",46,"^6",46,"^V",2,"^1B",true,"^M",["^N",[["^P"],["^P","^Q"],["^P","^Q","~$&","^R"]]],"^8","Return a set that is the first set without elements of the remaining sets"]],"~:require-macros",["^ ","^E","^E"],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^F","^E"]]