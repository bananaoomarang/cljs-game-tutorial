shadow$provide[350]=function(r,l,A,p){var k=l(209);r=l(349);class m extends r.SimplePlane{constructor(d,c,a,b,e){super(k.Texture.WHITE,4,4);this._origWidth=d.orig.width;this._origHeight=d.orig.height;this._width=this._origWidth;this._height=this._origHeight;this._leftWidth=c??d.defaultBorders?.left??10;this._rightWidth=b??d.defaultBorders?.right??10;this._topHeight=a??d.defaultBorders?.top??10;this._bottomHeight=e??d.defaultBorders?.bottom??10;this.texture=d}textureUpdated(){this._textureID=this.shader.texture._updateID;
this._refresh()}get vertices(){return this.geometry.getBuffer("aVertexPosition").data}set vertices(d){this.geometry.getBuffer("aVertexPosition").data=d}updateHorizontalVertices(){const d=this.vertices,c=this._getMinScale();d[9]=d[11]=d[13]=d[15]=this._topHeight*c;d[17]=d[19]=d[21]=d[23]=this._height-this._bottomHeight*c;d[25]=d[27]=d[29]=d[31]=this._height}updateVerticalVertices(){const d=this.vertices,c=this._getMinScale();d[2]=d[10]=d[18]=d[26]=this._leftWidth*c;d[4]=d[12]=d[20]=d[28]=this._width-
this._rightWidth*c;d[6]=d[14]=d[22]=d[30]=this._width}_getMinScale(){const d=this._leftWidth+this._rightWidth,c=this._topHeight+this._bottomHeight;return Math.min(this._width>d?1:this._width/d,this._height>c?1:this._height/c)}get width(){return this._width}set width(d){this._width=d;this._refresh()}get height(){return this._height}set height(d){this._height=d;this._refresh()}get leftWidth(){return this._leftWidth}set leftWidth(d){this._leftWidth=d;this._refresh()}get rightWidth(){return this._rightWidth}set rightWidth(d){this._rightWidth=
d;this._refresh()}get topHeight(){return this._topHeight}set topHeight(d){this._topHeight=d;this._refresh()}get bottomHeight(){return this._bottomHeight}set bottomHeight(d){this._bottomHeight=d;this._refresh()}_refresh(){var d=this.texture;const c=this.geometry.buffers[1].data;this._origWidth=d.orig.width;this._origHeight=d.orig.height;d=1/this._origWidth;const a=1/this._origHeight;c[0]=c[8]=c[16]=c[24]=0;c[1]=c[3]=c[5]=c[7]=0;c[6]=c[14]=c[22]=c[30]=1;c[25]=c[27]=c[29]=c[31]=1;c[2]=c[10]=c[18]=c[26]=
d*this._leftWidth;c[4]=c[12]=c[20]=c[28]=1-d*this._rightWidth;c[9]=c[11]=c[13]=c[15]=a*this._topHeight;c[17]=c[19]=c[21]=c[23]=1-a*this._bottomHeight;this.updateHorizontalVertices();this.updateVerticalVertices();this.geometry.buffers[0].update();this.geometry.buffers[1].update()}}p.NineSlicePlane=m}
goog.provide("module$node_modules$$pixi$mesh_extras$lib$NineSlicePlane");
goog.global. module$node_modules$$pixi$mesh_extras$lib$NineSlicePlane=shadow.js.require(350, {});
