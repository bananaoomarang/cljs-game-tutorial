shadow$provide[51]=function(r,l,A,p){var k=l(49);r=l(50);k.extend([r]);const m=class{constructor(d=16777215){this._value=null;this._components=new Float32Array(4);this._components.fill(1);this._int=16777215;this.value=d}get red(){return this._components[0]}get green(){return this._components[1]}get blue(){return this._components[2]}get alpha(){return this._components[3]}setValue(d){return this.value=d,this}set value(d){if(d instanceof m)this._value=this.cloneSource(d._value),this._int=d._int,this._components.set(d._components);
else{if(null===d)throw Error("Cannot set PIXI.Color#value to null");(null===this._value||!this.isSourceEqual(this._value,d))&&(this.normalize(d),this._value=this.cloneSource(d))}}get value(){return this._value}cloneSource(d){return"string"==typeof d||"number"==typeof d||d instanceof Number||null===d?d:Array.isArray(d)||ArrayBuffer.isView(d)?d.slice(0):"object"==typeof d&&null!==d?{...d}:d}isSourceEqual(d,c){var a=typeof d;if(a!==typeof c)return!1;if("number"===a||"string"===a||d instanceof Number)return d===
c;if(Array.isArray(d)&&Array.isArray(c)||ArrayBuffer.isView(d)&&ArrayBuffer.isView(c))return d.length!==c.length?!1:d.every((b,e)=>b===c[e]);if(null!==d&&null!==c){a=Object.keys(d);const b=Object.keys(c);return a.length!==b.length?!1:a.every(e=>d[e]===c[e])}return d===c}toRgba(){const [d,c,a,b]=this._components;return{r:d,g:c,b:a,a:b}}toRgb(){const [d,c,a]=this._components;return{r:d,g:c,b:a}}toRgbaString(){const [d,c,a]=this.toUint8RgbArray();return`rgba(${d},${c},${a},${this.alpha})`}toUint8RgbArray(d){const [c,
a,b]=this._components;return d=d??[],d[0]=Math.round(255*c),d[1]=Math.round(255*a),d[2]=Math.round(255*b),d}toRgbArray(d){d=d??[];const [c,a,b]=this._components;return d[0]=c,d[1]=a,d[2]=b,d}toNumber(){return this._int}toLittleEndianNumber(){const d=this._int;return(d>>16)+(d&65280)+((d&255)<<16)}multiply(d){const [c,a,b,e]=m.temp.setValue(d)._components;return this._components[0]*=c,this._components[1]*=a,this._components[2]*=b,this._components[3]*=e,this.refreshInt(),this._value=null,this}premultiply(d,
c=!0){return c&&(this._components[0]*=d,this._components[1]*=d,this._components[2]*=d),this._components[3]=d,this.refreshInt(),this._value=null,this}toPremultiplied(d,c=!0){if(1===d)return-16777216+this._int;if(0===d)return c?0:this._int;let a=this._int>>16&255,b=this._int>>8&255,e=this._int&255;return c&&(a=a*d+.5|0,b=b*d+.5|0,e=e*d+.5|0),(255*d<<24)+(a<<16)+(b<<8)+e}toHex(){const d=this._int.toString(16);return`#${"000000".substring(0,6-d.length)+d}`}toHexa(){const d=Math.round(255*this._components[3]).toString(16);
return this.toHex()+"00".substring(0,2-d.length)+d}setAlpha(d){return this._components[3]=this._clamp(d),this}round(d){const [c,a,b]=this._components;return this._components[0]=Math.round(c*d)/d,this._components[1]=Math.round(a*d)/d,this._components[2]=Math.round(b*d)/d,this.refreshInt(),this._value=null,this}toArray(d){d=d??[];const [c,a,b,e]=this._components;return d[0]=c,d[1]=a,d[2]=b,d[3]=e,d}normalize(d){let c,a;let b;if(("number"==typeof d||d instanceof Number)&&0<=d&&16777215>=d){var e=d;c=
(e>>16&255)/255;a=(e>>8&255)/255;e=(e&255)/255;b=1}else if((Array.isArray(d)||d instanceof Float32Array)&&3<=d.length&&4>=d.length)d=this._clamp(d),[c,a,e,b=1]=d;else if((d instanceof Uint8Array||d instanceof Uint8ClampedArray)&&3<=d.length&&4>=d.length)d=this._clamp(d,0,255),[c,a,e,b=255]=d,c/=255,a/=255,e/=255,b/=255;else if("string"==typeof d||"object"==typeof d){if("string"==typeof d){var g=m.HEX_PATTERN.exec(d);g&&(d=`#${g[2]}`)}g=k.colord(d);g.isValid()&&({r:c,g:a,b:e,a:b}=g.rgba,c/=255,a/=
255,e/=255)}if(void 0!==c)this._components[0]=c,this._components[1]=a,this._components[2]=e,this._components[3]=b,this.refreshInt();else throw Error(`Unable to convert color ${d}`);}refreshInt(){this._clamp(this._components);const [d,c,a]=this._components;this._int=(255*d<<16)+(255*c<<8)+(255*a|0)}_clamp(d,c=0,a=1){return"number"==typeof d?Math.min(Math.max(d,c),a):(d.forEach((b,e)=>{d[e]=Math.min(Math.max(b,c),a)}),d)}};r=m;r.shared=new r;r.temp=new r;r.HEX_PATTERN=/^(#|0x)?(([a-f0-9]{3}){1,2}([a-f0-9]{2})?)$/i;
p.Color=r}
goog.provide("module$node_modules$$pixi$color$lib$Color");
goog.global. module$node_modules$$pixi$color$lib$Color=shadow.js.require(51, {});
