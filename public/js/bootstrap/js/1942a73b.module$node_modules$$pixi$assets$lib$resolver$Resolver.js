shadow$provide[284]=function(r,l,A,p){var k=l(209),m=l(263),d=l(265),c=l(266);class a{constructor(){this._defaultBundleIdentifierOptions={connector:"-",createBundleAssetId:(b,e)=>`${b}${this._bundleIdConnector}${e}`,extractAssetIdFromBundle:(b,e)=>e.replace(`${b}${this._bundleIdConnector}`,"")};this._bundleIdConnector=this._defaultBundleIdentifierOptions.connector;this._createBundleAssetId=this._defaultBundleIdentifierOptions.createBundleAssetId;this._extractAssetIdFromBundle=this._defaultBundleIdentifierOptions.extractAssetIdFromBundle;
this._assetMap={};this._preferredOrder=[];this._parsers=[];this._resolverHash={};this._bundles={}}setBundleIdentifier(b){if(this._bundleIdConnector=b.connector??this._bundleIdConnector,this._createBundleAssetId=b.createBundleAssetId??this._createBundleAssetId,this._extractAssetIdFromBundle=b.extractAssetIdFromBundle??this._extractAssetIdFromBundle,"bar"!==this._extractAssetIdFromBundle("foo",this._createBundleAssetId("foo","bar")))throw Error("[Resolver] GenerateBundleAssetId are not working correctly");
}prefer(...b){b.forEach(e=>{this._preferredOrder.push(e);e.priority||(e.priority=Object.keys(e.params))});this._resolverHash={}}set basePath(b){this._basePath=b}get basePath(){return this._basePath}set rootPath(b){this._rootPath=b}get rootPath(){return this._rootPath}get parsers(){return this._parsers}reset(){this.setBundleIdentifier(this._defaultBundleIdentifierOptions);this._assetMap={};this._preferredOrder=[];this._resolverHash={};this._manifest=this._basePath=this._rootPath=null;this._bundles=
{};this._defaultSearchParams=null}setDefaultSearchParams(b){this._defaultSearchParams="string"==typeof b?b:Object.keys(b).map(e=>`${encodeURIComponent(e)}=${encodeURIComponent(b[e])}`).join("\x26")}getAlias(b){const {alias:e,name:g,src:f,srcs:h}=b;return m.convertToList(e||g||f||h,n=>"string"==typeof n?n:Array.isArray(n)?n.map(q=>q?.src??q?.srcs??q):n?.src||n?.srcs?n.src??n.srcs:n,!0)}addManifest(b){this._manifest&&console.warn("[Resolver] Manifest already exists, this will be overwritten");this._manifest=
b;b.bundles.forEach(e=>{this.addBundle(e.name,e.assets)})}addBundle(b,e){const g=[];Array.isArray(e)?e.forEach(f=>{const h=f.src??f.srcs;var n=f.alias??f.name;if("string"==typeof n){var q=this._createBundleAssetId(b,n);g.push(q);n=[n,q]}else q=n.map(t=>this._createBundleAssetId(b,t)),g.push(...q),n=[...n,...q];this.add({...f,alias:n,src:h})}):Object.keys(e).forEach(f=>{const h=[f,this._createBundleAssetId(b,f)];if("string"==typeof e[f])this.add({alias:h,src:e[f]});else if(Array.isArray(e[f]))this.add({alias:h,
src:e[f]});else{f=e[f];const n=f.src??f.srcs;this.add({...f,alias:h,src:Array.isArray(n)?n:[n]})}g.push(...h)});this._bundles[b]=g}add(b,e,g,f,h){const n=[];"string"==typeof b||Array.isArray(b)&&"string"==typeof b[0]?(k.utils.deprecation("7.2.0","Assets.add now uses an object instead of individual parameters.\nPlease use Assets.add({ alias, src, data, format, loadParser }) instead."),n.push({alias:b,src:e,data:g,format:f,loadParser:h})):Array.isArray(b)?n.push(...b):n.push(b);let q;q=t=>{this.hasKey(t)&&
console.warn(`[Resolver] already has key: ${t} overwriting`)};m.convertToList(n).forEach(t=>{const {src:u,srcs:v}=t;let {data:x,format:z,loadParser:y}=t;const C=m.convertToList(u||v).map(E=>"string"==typeof E?d.createStringVariations(E):Array.isArray(E)?E:[E]),B=this.getAlias(t);Array.isArray(B)?B.forEach(q):q(B);const w=[];C.forEach(E=>{E.forEach(H=>{let I={};if("object"!=typeof H){I.src=H;for(let M=0;M<this._parsers.length;M++){const N=this._parsers[M];if(N.test(H)){I=N.parse(H);break}}}else x=
H.data??x,z=H.format??z,y=H.loadParser??y,I={...I,...H};if(!B)throw Error(`[Resolver] alias is undefined for this asset: ${I.src}`);I=this.buildResolvedAsset(I,{aliases:B,data:x,format:z,loadParser:y});w.push(I)})});B.forEach(E=>{this._assetMap[E]=w})})}resolveBundle(b){const e=c.isSingleItem(b);b=m.convertToList(b);const g={};return b.forEach(f=>{var h=this._bundles[f];if(h){h=this.resolve(h);const n={};for(const q in h){const t=h[q];n[this._extractAssetIdFromBundle(f,q)]=t}g[f]=n}}),e?g[b[0]]:g}resolveUrl(b){const e=
this.resolve(b);if("string"!=typeof b){b={};for(const g in e)b[g]=e[g].src;return b}return e.src}resolve(b){const e=c.isSingleItem(b);b=m.convertToList(b);const g={};return b.forEach(f=>{if(!this._resolverHash[f])if(this._assetMap[f]){let h=this._assetMap[f];const n=h[0],q=this._getPreferredOrder(h);q?.priority.forEach(t=>{q.params[t].forEach(u=>{const v=h.filter(x=>x[t]?x[t]===u:!1);v.length&&(h=v)})});this._resolverHash[f]=h[0]??n}else this._resolverHash[f]=this.buildResolvedAsset({alias:[f],src:f},
{});g[f]=this._resolverHash[f]}),e?g[b[0]]:g}hasKey(b){return!!this._assetMap[b]}hasBundle(b){return!!this._bundles[b]}_getPreferredOrder(b){for(let e=0;e<b.length;e++){const g=b[0],f=this._preferredOrder.find(h=>h.params.format.includes(g.format));if(f)return f}return this._preferredOrder[0]}_appendDefaultSearchParams(b){if(!this._defaultSearchParams)return b;const e=/\?/.test(b)?"\x26":"?";return`${b}${e}${this._defaultSearchParams}`}buildResolvedAsset(b,e){const {aliases:g,data:f,loadParser:h,
format:n}=e;return(this._basePath||this._rootPath)&&(b.src=k.utils.path.toAbsolute(b.src,this._basePath,this._rootPath)),b.alias=g??b.alias??[b.src],b.src=this._appendDefaultSearchParams(b.src),b.data={...(f||{}),...b.data},b.loadParser=h??b.loadParser,b.format=n??k.utils.path.extname(b.src).slice(1),b.srcs=b.src,b.name=b.alias,b}}p.Resolver=a}
goog.provide("module$node_modules$$pixi$assets$lib$resolver$Resolver");
goog.global. module$node_modules$$pixi$assets$lib$resolver$Resolver=shadow.js.require(284, {});
