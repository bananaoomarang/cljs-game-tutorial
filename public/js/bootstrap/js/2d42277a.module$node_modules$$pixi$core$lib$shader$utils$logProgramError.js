shadow$provide[111]=function(r,l,A,p){function k(m,d){const c=m.getShaderSource(d).split("\n").map((e,g)=>`${g}: ${e}`);m=m.getShaderInfoLog(d);const a={},b=[""];m.split("\n").map(e=>parseFloat(e.replace(/^ERROR: 0:([\d]+):.*$/,"$1"))).filter(e=>e&&!a[e]?(a[e]=!0,!0):!1).forEach(e=>{c[e-1]=`%c${c[e-1]}%c`;b.push("background: #FF0000; color:#FFFFFF; font-size: 10px","font-size: 10px")});d=c.join("\n");b[0]=d;console.error(m);console.groupCollapsed("click to view full shader code");console.warn(...b);
console.groupEnd()}p.logProgramError=function(m,d,c,a){m.getProgramParameter(d,m.LINK_STATUS)||(m.getShaderParameter(c,m.COMPILE_STATUS)||k(m,c),m.getShaderParameter(a,m.COMPILE_STATUS)||k(m,a),console.error("PixiJS Error: Could not initialize shader."),""!==m.getProgramInfoLog(d)&&console.warn("PixiJS Warning: gl.getProgramInfoLog()",m.getProgramInfoLog(d)))}}
goog.provide("module$node_modules$$pixi$core$lib$shader$utils$logProgramError");
goog.global. module$node_modules$$pixi$core$lib$shader$utils$logProgramError=shadow.js.require(111, {});
