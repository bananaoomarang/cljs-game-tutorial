shadow$provide[40]=function(r,l,A,p){var k=l(38),m=Object.prototype.hasOwnProperty,d=Array.isArray,c={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:k.decode,delimiter:"\x26",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1E3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},a=function(g){return g.replace(/&#(\d+);/g,function(f,h){return String.fromCharCode(parseInt(h,10))})},b=function(g,f){return g&&"string"===
typeof g&&f.comma&&-1<g.indexOf(",")?g.split(","):g},e=function(g,f){var h={__proto__:null};g=(f.ignoreQueryPrefix?g.replace(/^\?/,""):g).split(f.delimiter,Infinity===f.parameterLimit?void 0:f.parameterLimit);var n=-1,q,t=f.charset;if(f.charsetSentinel)for(q=0;q<g.length;++q)0===g[q].indexOf("utf8\x3d")&&("utf8\x3d%E2%9C%93"===g[q]?t="utf-8":"utf8\x3d%26%2310003%3B"===g[q]&&(t="iso-8859-1"),n=q,q=g.length);for(q=0;q<g.length;++q)if(q!==n){var u=g[q],v=u.indexOf("]\x3d"),x=-1===v?u.indexOf("\x3d"):
v+1;-1===x?(v=f.decoder(u,c.decoder,t,"key"),x=f.strictNullHandling?null:""):(v=f.decoder(u.slice(0,x),c.decoder,t,"key"),x=k.maybeMap(b(u.slice(x+1),f),function(z){return f.decoder(z,c.decoder,t,"value")}));x&&f.interpretNumericEntities&&"iso-8859-1"===t&&(x=a(x));-1<u.indexOf("[]\x3d")&&(x=d(x)?[x]:x);m.call(h,v)?h[v]=k.combine(h[v],x):h[v]=x}return h};A.exports=function(g,f){if(f){if(null!==f.decoder&&void 0!==f.decoder&&"function"!==typeof f.decoder)throw new TypeError("Decoder has to be a function.");
if("undefined"!==typeof f.charset&&"utf-8"!==f.charset&&"iso-8859-1"!==f.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");f={allowDots:"undefined"===typeof f.allowDots?c.allowDots:!!f.allowDots,allowPrototypes:"boolean"===typeof f.allowPrototypes?f.allowPrototypes:c.allowPrototypes,allowSparse:"boolean"===typeof f.allowSparse?f.allowSparse:c.allowSparse,arrayLimit:"number"===typeof f.arrayLimit?f.arrayLimit:c.arrayLimit,charset:"undefined"===typeof f.charset?
c.charset:f.charset,charsetSentinel:"boolean"===typeof f.charsetSentinel?f.charsetSentinel:c.charsetSentinel,comma:"boolean"===typeof f.comma?f.comma:c.comma,decoder:"function"===typeof f.decoder?f.decoder:c.decoder,delimiter:"string"===typeof f.delimiter||k.isRegExp(f.delimiter)?f.delimiter:c.delimiter,depth:"number"===typeof f.depth||!1===f.depth?+f.depth:c.depth,ignoreQueryPrefix:!0===f.ignoreQueryPrefix,interpretNumericEntities:"boolean"===typeof f.interpretNumericEntities?f.interpretNumericEntities:
c.interpretNumericEntities,parameterLimit:"number"===typeof f.parameterLimit?f.parameterLimit:c.parameterLimit,parseArrays:!1!==f.parseArrays,plainObjects:"boolean"===typeof f.plainObjects?f.plainObjects:c.plainObjects,strictNullHandling:"boolean"===typeof f.strictNullHandling?f.strictNullHandling:c.strictNullHandling}}else f=c;if(""===g||null===g||"undefined"===typeof g)return f.plainObjects?Object.create(null):{};for(var h="string"===typeof g?e(g,f):g,n=f.plainObjects?Object.create(null):{},q=Object.keys(h),
t=0;t<q.length;++t){var u=q[t];a:{var v=u;u=h[u];var x=f,z="string"===typeof g;if(v){v=x.allowDots?v.replace(/\.([^.[]+)/g,"[$1]"):v;var y=/(\[[^[\]]*])/,C=/(\[[^[\]]*])/g,B=(y=0<x.depth&&y.exec(v))?v.slice(0,y.index):v,w=[];if(B){if(!x.plainObjects&&m.call(Object.prototype,B)&&!x.allowPrototypes){u=void 0;break a}w.push(B)}for(B=0;0<x.depth&&null!==(y=C.exec(v))&&B<x.depth;){B+=1;if(!x.plainObjects&&m.call(Object.prototype,y[1].slice(1,-1))&&!x.allowPrototypes){u=void 0;break a}w.push(y[1])}y&&w.push("["+
v.slice(y.index)+"]");v=w;u=z?u:b(u,x);for(z=v.length-1;0<=z;--z)y=v[z],"[]"===y&&x.parseArrays?C=[].concat(u):(C=x.plainObjects?Object.create(null):{},w="["===y.charAt(0)&&"]"===y.charAt(y.length-1)?y.slice(1,-1):y,B=parseInt(w,10),x.parseArrays||""!==w?!isNaN(B)&&y!==w&&String(B)===w&&0<=B&&x.parseArrays&&B<=x.arrayLimit?(C=[],C[B]=u):"__proto__"!==w&&(C[w]=u):C={0:u}),u=C}else u=void 0}n=k.merge(n,u,f)}return!0===f.allowSparse?n:k.compact(n)}}
goog.provide("module$node_modules$qs$lib$parse");
goog.global. module$node_modules$qs$lib$parse=shadow.js.require(40, {});
