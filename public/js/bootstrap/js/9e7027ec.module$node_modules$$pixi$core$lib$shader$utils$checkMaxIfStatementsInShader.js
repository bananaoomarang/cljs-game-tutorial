shadow$provide[75]=function(r,l,A,p){p.checkMaxIfStatementsInShader=function(k,m){if(0===k)throw Error("Invalid value of `0` passed to `checkMaxIfStatementsInShader`");const d=m.createShader(m.FRAGMENT_SHADER);for(;;){var c="precision mediump float;\nvoid main(void){\nfloat test \x3d 0.1;\n%forloop%\ngl_FragColor \x3d vec4(0.0);\n}".replace;let a="";for(let b=0;b<k;++b)0<b&&(a+="\nelse "),b<k-1&&(a+=`if(test == ${b}.0){}`);c=c.call("precision mediump float;\nvoid main(void){\nfloat test \x3d 0.1;\n%forloop%\ngl_FragColor \x3d vec4(0.0);\n}",
/%forloop%/gi,a);if(m.shaderSource(d,c),m.compileShader(d),m.getShaderParameter(d,m.COMPILE_STATUS))break;else k=k/2|0}return k}}
goog.provide("module$node_modules$$pixi$core$lib$shader$utils$checkMaxIfStatementsInShader");
goog.global. module$node_modules$$pixi$core$lib$shader$utils$checkMaxIfStatementsInShader=shadow.js.require(75, {});
