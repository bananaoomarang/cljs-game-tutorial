shadow$provide[120]=function(r,l,A,p){var k=l(102),m=l(117),d=l(119),c=l(118);class a{constructor(b,e){if(this.vertexSrc=b,this.fragTemplate=e,this.programCache={},this.defaultGroupCache={},!e.includes("%count%"))throw Error('Fragment template must contain "%count%".');if(!e.includes("%forloop%"))throw Error('Fragment template must contain "%forloop%".');}generateShader(b){if(!this.programCache[b]){var e=new Int32Array(b);for(let g=0;g<b;g++)e[g]=g;this.defaultGroupCache[b]=c.UniformGroup.from({uSamplers:e},
!0);e=this.fragTemplate;e=e.replace(/%count%/gi,`${b}`);e=e.replace(/%forloop%/gi,this.generateSampleSrc(b));this.programCache[b]=new m.Program(this.vertexSrc,e)}e={tint:new Float32Array([1,1,1,1]),translationMatrix:new k.Matrix,default:this.defaultGroupCache[b]};return new d.Shader(this.programCache[b],e)}generateSampleSrc(b){let e;e="\n\n";for(let g=0;g<b;g++)0<g&&(e+="\nelse "),g<b-1&&(e+=`if(vTextureId < ${g}.5)`),e+="\n{",e+=`
	color = texture2D(uSamplers[${g}], vTextureCoord);`,e+="\n}";return e+="\n",e+="\n",e}}p.BatchShaderGenerator=a}
goog.provide("module$node_modules$$pixi$core$lib$batch$BatchShaderGenerator");
goog.global. module$node_modules$$pixi$core$lib$batch$BatchShaderGenerator=shadow.js.require(120, {});
