shadow$provide[355]=function(r,l,A,p){var k=l(209);class m{constructor(d,c,a){this.geometry=new k.Geometry;this.indexBuffer=null;this.size=a;this.dynamicProperties=[];this.staticProperties=[];for(a=0;a<d.length;++a){let b=d[a];b={attributeName:b.attributeName,size:b.size,uploadFunction:b.uploadFunction,type:b.type||k.TYPES.FLOAT,offset:b.offset};c[a]?this.dynamicProperties.push(b):this.staticProperties.push(b)}this.staticStride=0;this.staticDataUint32=this.staticData=this.staticBuffer=null;this.dynamicStride=
0;this.dynamicDataUint32=this.dynamicData=this.dynamicBuffer=null;this._updateID=0;this.initBuffers()}initBuffers(){const d=this.geometry;var c=0;this.indexBuffer=new k.Buffer(k.utils.createIndicesForQuads(this.size),!0,!0);d.addIndex(this.indexBuffer);this.dynamicStride=0;for(var a=0;a<this.dynamicProperties.length;++a){var b=this.dynamicProperties[a];b.offset=c;c+=b.size;this.dynamicStride+=b.size}c=new ArrayBuffer(this.size*this.dynamicStride*16);this.dynamicData=new Float32Array(c);this.dynamicDataUint32=
new Uint32Array(c);this.dynamicBuffer=new k.Buffer(this.dynamicData,!1,!1);this.staticStride=c=0;for(a=0;a<this.staticProperties.length;++a)b=this.staticProperties[a],b.offset=c,c+=b.size,this.staticStride+=b.size;c=new ArrayBuffer(this.size*this.staticStride*16);this.staticData=new Float32Array(c);this.staticDataUint32=new Uint32Array(c);this.staticBuffer=new k.Buffer(this.staticData,!0,!1);for(c=0;c<this.dynamicProperties.length;++c)a=this.dynamicProperties[c],d.addAttribute(a.attributeName,this.dynamicBuffer,
0,a.type===k.TYPES.UNSIGNED_BYTE,a.type,4*this.dynamicStride,4*a.offset);for(c=0;c<this.staticProperties.length;++c)a=this.staticProperties[c],d.addAttribute(a.attributeName,this.staticBuffer,0,a.type===k.TYPES.UNSIGNED_BYTE,a.type,4*this.staticStride,4*a.offset)}uploadDynamic(d,c,a){for(let b=0;b<this.dynamicProperties.length;b++){const e=this.dynamicProperties[b];e.uploadFunction(d,c,a,e.type===k.TYPES.UNSIGNED_BYTE?this.dynamicDataUint32:this.dynamicData,this.dynamicStride,e.offset)}this.dynamicBuffer._updateID++}uploadStatic(d,
c,a){for(let b=0;b<this.staticProperties.length;b++){const e=this.staticProperties[b];e.uploadFunction(d,c,a,e.type===k.TYPES.UNSIGNED_BYTE?this.staticDataUint32:this.staticData,this.staticStride,e.offset)}this.staticBuffer._updateID++}destroy(){this.staticDataUint32=this.staticData=this.staticBuffer=this.staticProperties=this.dynamicDataUint32=this.dynamicData=this.dynamicBuffer=this.dynamicProperties=this.indexBuffer=null;this.geometry.destroy()}}p.ParticleBuffer=m}
goog.provide("module$node_modules$$pixi$particle_container$lib$ParticleBuffer");
goog.global. module$node_modules$$pixi$particle_container$lib$ParticleBuffer=shadow.js.require(355, {});
