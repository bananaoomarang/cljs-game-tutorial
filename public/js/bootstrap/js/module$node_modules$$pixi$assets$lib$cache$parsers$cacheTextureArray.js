shadow$provide.module$node_modules$$pixi$assets$lib$cache$parsers$cacheTextureArray = function(global, require, module, exports) {
  var core = require("module$node_modules$$pixi$core$lib$index");
  global = {extension:core.ExtensionType.CacheParser, test:asset => Array.isArray(asset) && asset.every(t => t instanceof core.Texture), getCacheableAssets:(keys, asset) => {
    const out = {};
    return keys.forEach(key => {
      asset.forEach((item, i) => {
        out[key + (0 === i ? "" : i + 1)] = item;
      });
    }), out;
  }};
  core.extensions.add(global);
  exports.cacheTextureArray = global;
};

goog.provide("module$node_modules$$pixi$assets$lib$cache$parsers$cacheTextureArray");
goog.global. module$node_modules$$pixi$assets$lib$cache$parsers$cacheTextureArray=shadow.js.require("module$node_modules$$pixi$assets$lib$cache$parsers$cacheTextureArray", {});

//# sourceMappingURL=module$node_modules$$pixi$assets$lib$cache$parsers$cacheTextureArray.js.map
