shadow$provide.module$node_modules$$pixi$compressed_textures$lib$loaders$resolveCompressedTextureUrl = function(global, require, module, exports) {
  var core = require("module$node_modules$$pixi$core$lib$index");
  global = {extension:core.ExtensionType.ResolveParser, test:value => {
    value = core.utils.path.extname(value).slice(1);
    return ["basis", "ktx", "dds"].includes(value);
  }, parse:value => {
    const extension = core.utils.path.extname(value).slice(1);
    if ("ktx" === extension) {
      const extensions2 = ".s3tc.ktx .s3tc_sRGB.ktx .etc.ktx .etc1.ktx .pvrt.ktx .atc.ktx .astc.ktx .bptc.ktx".split(" ");
      if (extensions2.some(ext => value.endsWith(ext))) {
        return {resolution:parseFloat(core.settings.RETINA_PREFIX.exec(value)?.[1] ?? "1"), format:extensions2.find(ext => value.endsWith(ext)), src:value};
      }
    }
    return {resolution:parseFloat(core.settings.RETINA_PREFIX.exec(value)?.[1] ?? "1"), format:extension, src:value};
  }};
  core.extensions.add(global);
  exports.resolveCompressedTextureUrl = global;
};

goog.provide("module$node_modules$$pixi$compressed_textures$lib$loaders$resolveCompressedTextureUrl");
goog.global. module$node_modules$$pixi$compressed_textures$lib$loaders$resolveCompressedTextureUrl=shadow.js.require("module$node_modules$$pixi$compressed_textures$lib$loaders$resolveCompressedTextureUrl", {});

//# sourceMappingURL=module$node_modules$$pixi$compressed_textures$lib$loaders$resolveCompressedTextureUrl.js.map
