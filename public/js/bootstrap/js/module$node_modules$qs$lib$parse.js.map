{
"version":3,
"file":"module$node_modules$qs$lib$parse.js",
"lineCount":87,
"mappings":"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",
"sources":["node_modules/qs/lib/parse.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$qs$lib$parse\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","utils","has","Object","prototype","hasOwnProperty","isArray","Array","defaults","allowDots","allowPrototypes","allowSparse","arrayLimit","charset","charsetSentinel","comma","decoder","decode","delimiter","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictNullHandling","str","replace","$0","numberStr","String","fromCharCode","parseInt","parseArrayValue","val","options","indexOf","split","parseValues","obj","__proto__","parts","cleanStr","Infinity","limit","undefined","skipIndex","i","length","isoSentinel","part","bracketEqualsPos","pos","key","slice","maybeMap","encodedVal","call","combine","module.exports","opts","TypeError","isRegExp","create","tempObj","keys","givenKey","brackets","child","parent","segment","exec","index","push","leaf","valuesParsed","chain","root","concat","cleanRoot","charAt","isNaN","merge","newObj","compact"]
}
