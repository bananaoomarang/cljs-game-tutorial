{
"version":3,
"file":"module$node_modules$set_function_length$index.js",
"lineCount":23,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,GAAkE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGtGC,QAAAA,GAAeH,OAAA,CAAQ,yCAAR,CAAfG;AACJ,MAAIC,SAASJ,OAAA,CAAQ,gDAAR,CAAb,EACIK,iBAAiBL,OAAA,CAAQ,oDAAR,CAAA,EADrB,EAEIM,OAAON,OAAA,CAAQ,gCAAR,CAFX,EAIIO,aAAaP,OAAA,CAAQ,oCAAR,CAJjB,EAKIQ,SAASL,MAAA,CAAa,cAAb,CALb;AAUAF,QAAOC,CAAAA,OAAP,GAAiBO,QAA0B,CAACC,EAAD,EAAKC,MAAL,CAAa;AACvD,QAAkB,UAAlB,KAAI,MAAOD,GAAX;AACC,YAAM,IAAIH,UAAJ,CAAe,wBAAf,CAAN;AADD;AAGA,QAAsB,QAAtB,KAAI,MAAOI,OAAX,IAA2C,CAA3C,GAAkCA,MAAlC,IAAyD,UAAzD,GAAgDA,MAAhD,IAAuEH,MAAA,CAAOG,MAAP,CAAvE,KAA0FA,MAA1F;AACC,YAAM,IAAIJ,UAAJ,CAAe,4CAAf,CAAN;AADD;AAIA,QAAIK,QAA2B,CAA3BA,GAAQC,SAAUF,CAAAA,MAAlBC,IAAgC,CAAC,CAACC,SAAA,CAAU,CAAV,CAAtC,EAEIC,+BAA+B,CAAA,CAFnC,EAGIC,2BAA2B,CAAA,CAH/B;AAIA,QAAI,QAAJ,IAAgBL,EAAhB,IAAsBJ,IAAtB,CAA4B;AAC3B,UAAIU,OAAOV,IAAA,CAAKI,EAAL,EAAS,QAAT,CAAX;AACIM,UAAJ,IAAY,CAACA,IAAKC,CAAAA,YAAlB,KACCH,4BADD,GACgC,CAAA,CADhC;AAGIE,UAAJ,IAAY,CAACA,IAAKE,CAAAA,QAAlB,KACCH,wBADD,GAC4B,CAAA,CAD5B;AAL2B;AAU5B,QAAID,4BAAJ,IAAoCC,wBAApC,IAAgE,CAACH,KAAjE;AACKP,oBAAJ,GACCD,MAAA,CAA6CM,EAA7C,EAAkD,QAAlD,EAA4DC,MAA5D,EAAoE,CAAA,CAApE,EAA0E,CAAA,CAA1E,CADD,GAGCP,MAAA,CAA6CM,EAA7C,EAAkD,QAAlD,EAA4DC,MAA5D,CAHD;AADD;AAOA,WAAOD,EAAP;AA7BuD,GAAxD;AAd0G,CAA1G;;",
"sources":["node_modules/set-function-length/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$set_function_length$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @typedef {(...args: unknown[]) => unknown} Func */\n\n/** @type {<T extends Func = Func>(fn: T, length: number, loose?: boolean) => T} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","GetIntrinsic","define","hasDescriptors","gOPD","$TypeError","$floor","module.exports","fn","length","loose","arguments","functionLengthIsConfigurable","functionLengthIsWritable","desc","configurable","writable"]
}
