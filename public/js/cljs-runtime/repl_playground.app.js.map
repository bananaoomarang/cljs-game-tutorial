{"version":3,"sources":["repl_playground/app.cljs"],"mappings":"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","names":["js/repl-playground","js/repl-playground.app","js/repl-playground.app.!eval-ready?","repl-playground.app/!eval-ready?","reagent.core.atom","repl-playground.app/compiling","repl-playground.app/code","repl-playground.app/code-result","repl-playground.app/current-snippet","repl-playground.app/snippets","repl-playground.app/handle-eval","result","cljs.core.println","cljs.core/reset!","printed-result","sb__5647__auto__","goog.string/StringBuffer","*print-newline*-orig-val__11731","cljs.core/*print-newline*","*print-fn*-orig-val__11732","cljs.core/*print-fn*","*print-newline*-temp-val__11733","*print-fn*-temp-val__11734","x__5648__auto__","cljs.pprint.pprint","repl-playground.app/compile","repl-playground.repl/make-compile","repl-playground.app/update-result","mirror","value","cljs.core/deref","repl-playground.app/clear-pixi!","goog.dom/getElement","repl-playground.app/create-editor","node","val","js/module$node_modules$codemirror$lib$codemirror","cljs.core/clj->js","repl-playground.app/update-editor-value","repl-playground.app/editor","snippet-name","root-ref","cljs.core.atom","snippet-path","reagent.core.create_class","c__11300__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__11301__auto__","switch__11230__auto__","state_11744","state_val_11745","inst_11736","cljs.core.async.impl.ioc-helpers/take!","inst_11738","inst_11739","inst_11740","inst_11741","inst_11742","cljs.core.async.impl.ioc-helpers/return-chan","statearr-11746","state-machine__11231__auto__","ret-value__11232__auto__","result__11233__auto__","cljs.core/keyword-identical?","ex__11234__auto__","e11747","statearr-11748","cljs.core/seq","statearr-11749","cljs.core/first","state__11302__auto__","statearr-11750","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs-http.client/get","this","new-argv","cljs.core/rest","reagent.core/argv","snippet-ns","cljs.core/second","state_11760","state_val_11761","inst_11751","inst_11752","inst_11753","inst_11754","statearr-11762","inst_11756","inst_11757","inst_11758","statearr-11763","e11764","statearr-11765","statearr-11766","statearr-11767","p1__11735#","repl-playground.app/result","repl-playground.app/main-editor","snippet","repl-playground.app/mini-editor","title","repl-playground.app/app","cljs.core.nth","js/repl-playground.app.root","repl-playground.app/root","js/module$node_modules$react_dom$client.createRoot","repl-playground.app/init","repl-playground.repl/init","reagent.core.as_element","repl-playground.app/re-render"],"sourcesContent":["(ns repl-playground.app\n  (:require-macros [cljs.core.async.macros :refer [go]])\n  (:require\n   [clojure.pprint :refer [pprint]]\n   [goog.dom :as gdom]\n   [cljs.core.async :refer [<!]]\n   [cljs-http.client :as http]\n   [reagent.core :as r]\n   [repl-playground.repl :as repl]\n   [\"codemirror/mode/clojure/clojure\"] \n   [\"react-dom/client\" :refer [createRoot]]\n   [\"codemirror\" :as code-mirror]))\n\n(defonce !eval-ready? (r/atom false))\n(def compiling (r/atom false))\n(def code (r/atom \"(+ 1 1)\"))\n(def code-result (r/atom \"\"))\n(def current-snippet (r/atom 2))\n\n(def snippets\n  [{:path \"1\" :ns \"pixi-tutorial-1.game\"}\n   {:path \"2\" :ns \"pixi-tutorial-2.game\"}\n   {:path \"game\" :ns \"pixi-tutorial-final.game\"}])\n\n(defn handle-eval [result]\n  (println result)\n  (reset! compiling false)\n  (let [printed-result (with-out-str (pprint (:value result)))]\n    (reset! code-result printed-result)))\n\n(def compile (repl/make-compile handle-eval))\n\n(defn update-result [^js/CodeMirror mirror]\n  (reset! compiling true)\n  (let [value (. mirror getValue)]\n    (reset! code value)\n    \n    ;; ns option doesn't seem to work so :/\n    (compile (str \"(ns pixi-tutorial-final.game)\" @code))))\n\n(defn clear-pixi! []\n  (set! (.-innerHTML (gdom/getElement \"pixi-app\")) \"\"))\n\n(defn create-editor [node val]\n  (code-mirror node\n               (clj->js {:value val\n                         :theme \"dracula\"\n                         :mode \"clojure\"})))\n\n(defn update-editor-value [mirror val]\n  (-> mirror\n      (.getDoc)\n      (.setValue val))\n  (clear-pixi!))\n\n(defn editor [snippet-name]\n  (let [root-ref (atom nil)\n        mirror (atom nil)\n        snippet-path (str \"/snippets/\" snippet-name \".cljs\")]\n    (r/create-class\n     {:display-name \"editor\"\n\n      :component-did-mount\n      (fn []\n        (go\n          (let [response (<! (http/get snippet-path))]\n            (reset! mirror (create-editor @root-ref (:body response))))))\n      \n      :component-did-update\n      (fn [this]\n        (let [new-argv (rest (r/argv this))\n              snippet-path (first new-argv)\n              snippet-ns (second new-argv)]\n          (go\n            (update-editor-value @mirror \"Loading snippet...\")\n            (update-editor-value @mirror (:body (<! (http/get snippet-path)))))))\n\n      :render\n      (fn []\n        [:div\n         [:div.editor {:ref #(reset! root-ref %)}]\n         [:button {:class \"btn\" :on-click #(update-result @mirror)} \"Eval \ud83d\ude08\"]])})))\n\n(defn result []\n  [:div\n   (if @compiling\n     [:div {:class \"compiling-msg\"} \"Compiling\u2026\"]\n     [:div {:class \"compile-result\"} (str \"Last eval result: \" @code-result)])])\n\n(defn main-editor [snippet]\n  [:div.row-wrapper\n   [:div.main-editor\n    [editor (:path snippet)]]\n   [:div {:id \"pixi-app\" :class \"canvas\"}]])\n\n(defn mini-editor [snippet title]\n  [:div.mini-editor\n   [:h3 (if title title snippet)]\n   [editor snippet]])\n\n(defn app []\n  [:div\n   [main-editor (nth snippets @current-snippet)]\n   [:div.mini-editors\n    [mini-editor \"clear-bullets\" \"Clear bullets\"]]\n   [result]\n   [:h1 (str \"Eval ready: \" @!eval-ready?)]])\n\n(defonce root (createRoot (gdom/getElement \"root\")))\n\n(defn init []\n  (repl/init !eval-ready?)\n  (.render root (r/as-element [app])))\n\n(defn ^:dev/after-load re-render\n  []\n  (init))\n"]}